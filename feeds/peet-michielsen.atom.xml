<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PeetRonics' blog - Peet Michielsen</title><link href="http://peetronics.com/" rel="alternate"></link><link href="http://peetronics.com/feeds/peet-michielsen.atom.xml" rel="self"></link><id>http://peetronics.com/</id><updated>2020-10-30T22:30:00+00:00</updated><subtitle>All can be true!</subtitle><entry><title>Grab the opportunity</title><link href="http://peetronics.com/GrabTheOpportunity.html" rel="alternate"></link><published>2020-10-30T22:30:00+00:00</published><updated>2020-10-30T22:30:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-10-30:/GrabTheOpportunity.html</id><summary type="html">&lt;p&gt;What’s the best career advice you’ve ever had?&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="cartoon of someone walking the career path" src="http://peetronics.com/images/grab-the-opportunity.png" width="80%"&gt;&lt;/p&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;For the last few weeks I have been pondering over &lt;a href="https://club.ministryoftesting.com/t/bloggers-club-september-october-2020-what-s-the-best-career-advice-you-ve-ever-had"&gt;this month's topic of the Ministry of Testing blogging club (&lt;em&gt;What’s the best career advice you’ve ever had?&lt;/em&gt;)&lt;/a&gt;, and wondering if I can write something meaningful about that.&lt;br&gt;
It was only after I went to bed one night and I couldn't immediately catch sleep, that it suddenly dawned on me the best advice I got was when I was still studying.&lt;br&gt;
One lecturer (can't remember who) of my studies in The Netherlands gave this little piece of wisdom: &lt;strong&gt;grab the opportunity&lt;/strong&gt;.&lt;br&gt;
Looking back at my career so far it has been the advice I have followed and lived by a lot; often more unknowingly than not...  &lt;/p&gt;
&lt;h2&gt;Study&lt;/h2&gt;
&lt;p&gt;As said, the advice to &lt;em&gt;to grab the opportunity&lt;/em&gt; was given by a lecturer while I was &lt;a href="https://www.avans.nl/opleidingen/opleidingzoeker/business-it--management-breda-voltijd-bachelor/introductie#"&gt;studying at the HEAO in Breda&lt;/a&gt;.
But I can't remember who. There was another tutor however, called Ferrie Veen, and I always enjoyed his lectures. Probably because of his approach to teaching, which I really liked.&lt;br&gt;
One of the assignments he gave us was to compare yourself with an object and use that in a job application letter. I wrote a whole letter around a paperclip; the gist of it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uncomplicated&lt;/li&gt;
&lt;li&gt;Being flexible&lt;/li&gt;
&lt;li&gt;Versatile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But more on that later...&lt;/p&gt;
&lt;p&gt;The last part of the study was a student placement at a company for half a year, and work on a pre-defined practical assignment.
That went quite successful for me and as a result I was offered a job at that company after my graduation.
The first opportunity on my career path I grabbed. I landed a job without having to use my paperclip application letter, yet ...&lt;/p&gt;
&lt;h2&gt;Applying for my first job&lt;/h2&gt;
&lt;p&gt;Even before I started that job, the company went bust and I still had to go in search for a job. 
Looking back I could have seen it coming, but I was young and a bit naive (lesson learned).  &lt;/p&gt;
&lt;p&gt;Luck had it that, around the same time, a local bank where I lived was hiring for a role that matched my qualifications.
I immediately grabbed the opportunity to go to that bank and asked for the manager who was hiring, so I could introduce myself.
Of course I still had to write an official application, which I did. And yes, I did use the paperclip analogy.
I did get the job and I worked there for 2 1/2 years.&lt;/p&gt;
&lt;h2&gt;Moving town&lt;/h2&gt;
&lt;p&gt;After my then partner graduated, she got a job at a tourist office, in a completely different part of the country. This meant We had to move and I had to look for a new job.
Got rejected a few times on jobs I applied for locally, which was of course dissapointing.  &lt;/p&gt;
&lt;p&gt;A friend of my kept telling about his work and that they were always looking for colleagues to join their team. But that was a 2 hour commute one way. 
I still applied though and was offered a job. And by coincidence at the same time I got offered a job closer to home.
After much deliberation I decided to take the offer further from home. Could have been interpreted as a stupid decision, but I never regretted it.
In the 6 1/2 years I worked there I had many opportunities to:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work on great projects for different clients in a wide variety of industries&lt;/li&gt;
&lt;li&gt;Share knowledge with colleagues as a trainer&lt;/li&gt;
&lt;li&gt;Get to know lots of people with whom some of them I am still in touch with&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Moving abroad&lt;/h2&gt;
&lt;p&gt;After our first child was born, something had to change in my work situation. I was away still a lot for work. And as a result of that, I only saw my son during the week when he was asleep.
Weighing the options, we decided to take the opportunity to settle ourselves abroad and start a Bed &amp;amp; Breakfast in Scotland. Something we often talked about.
As financial support it was wise to still have a steady income, so I went in search for a job. I had the luck that a software company in Aberdeen was hiring for a role that suited me perfectly.
I applied, had a telephone interview, flew out for a face to face interview, and soon after an offer was made. I willingly accepted, and so we packed our stuff and moved across the pond.  &lt;/p&gt;
&lt;p&gt;In that company, I started as the first tester in a team of 12 developers. Over the years, I built up a structured testing discipline and culture. In the 12 years at that company I've grabbed many opportunities to grow mysself. 
By the time I left that company, a team of 15 test engineers was in place which I was in charge of.  &lt;/p&gt;
&lt;p&gt;Regarding my B&amp;amp;B adventures, I can tell many a story about that. But I will leave that for another day.&lt;/p&gt;
&lt;h2&gt;Redundancy&lt;/h2&gt;
&lt;p&gt;It was not my plan to leave the company yet, as there still were so much more opportunities to be grabbed.
But beacause of a organisational restructure I was made redundant.  &lt;/p&gt;
&lt;p&gt;I knew there weren't many job opportunities close by. So I had to look further afield for my next gig, and needed to be aware that it probably would take a bit longer to be back in fulltine work.
Then, a week into me &lt;em&gt;sitting&lt;/em&gt; at home, a friend pointed out that a local whisky distillery was looking for a tour guide. Well, that was an opportunity I couldn't let pass.
I showed my interest and soon I was showing tourists around &lt;a href="https://www.chivas.com/en-GB/visit-strathisla"&gt;Scotland's most beautiful distillery&lt;/a&gt;, while I still kept applying for jobs.  &lt;/p&gt;
&lt;p&gt;Luckily it didn't take too long to be made a new offer for a job. But it meant I was working away from home again ...&lt;/p&gt;
&lt;h2&gt;Current day&lt;/h2&gt;
&lt;p&gt;Have been in my current job for almost 3 years now, and it already has given me lots of new opportunities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The opportunity to work on medical devices. Something I haven't done yet in my 20+ year career.&lt;/li&gt;
&lt;li&gt;The opportunity to get my hands dirty again. Not being in a managerial role and doing actual testing.&lt;/li&gt;
&lt;li&gt;The opportunity to work with hard- and software. A whole new dimension and things to take into consideration.&lt;/li&gt;
&lt;li&gt;The opportunity to get into public speaking. A manager that encourages to submit papers for conferences.&lt;/li&gt;
&lt;li&gt;The opportunity to get more involved with the testing community. A Ministry of Testing Meetup closer by.&lt;/li&gt;
&lt;li&gt;The opportunity to make changes to the organisation. Bringing in 20+ years of experience.&lt;/li&gt;
&lt;li&gt;The opportunity to build a Community of Practice. Finding likeminded colleagues.&lt;/li&gt;
&lt;li&gt;... &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;In conclusion&lt;/h2&gt;
&lt;p&gt;In your career, there are many things coming on your path you can't foresee, and not always have influence on.
You can steer your career a lot yourself, but sometimes you need to look for opportunities, grab them, and help that get you further.  &lt;/p&gt;
&lt;p&gt;lets see what's the next opportunity ...&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Ministry Of Testing"></category><category term="Career"></category></entry><entry><title>GUI test automation for Windows desktop</title><link href="http://peetronics.com/GUITestAutomationForWindowsDesktop.html" rel="alternate"></link><published>2020-09-15T21:00:00+01:00</published><updated>2020-09-15T21:00:00+01:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-09-15:/GUITestAutomationForWindowsDesktop.html</id><summary type="html">&lt;p&gt;A collection of resources to be used for Windows desktop test automation, and things to consider in choosing your tooling&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Screenshot of a windows 3.1 desktop" src="http://peetronics.com/images/windows-desktop.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;If you look at conference talk and workshop topics, (online) articles, tutorials, and courses, you could get the impression that most software testing revolves around &lt;strong&gt;web&lt;/strong&gt; and &lt;strong&gt;mobile&lt;/strong&gt;. 
&lt;a href="https://www.practitest.com/resource/state-of-testing-report-2020/"&gt;The 2020 state of testing report&lt;/a&gt;, curated and published by Practitest, underwrites that. Web and mobile have got the biggest share of the technologies being tested (75% and 59% respectively). 
&lt;strong&gt;Desktop&lt;/strong&gt; is coming in third with 45%. Which makes you think why this technology is not getting more attention in the world of testing? 
It's about time that we put the limelight on &lt;strong&gt;desktop testing&lt;/strong&gt;; &lt;strong&gt;Windows&lt;/strong&gt; desktop &lt;strong&gt;automated&lt;/strong&gt; testing to be precise.  &lt;/p&gt;
&lt;p&gt;The first part of this article will give an overview of available tools for Windows desktop automation. 
Then it will go into the things to consider in choosing a tool. &lt;/p&gt;
&lt;h1&gt;Available tools&lt;/h1&gt;
&lt;p&gt;This will not be a complete overview on available desktop test automation tools. Things that are currently not included (but might be added later):  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Paid for tools. I have not done enough research into these. Only open source tools are listed.&lt;/li&gt;
&lt;li&gt;Tools for other operating systems than Windows (e.g. Linux, MacOS), as I've not had a lot of exposure on this.&lt;/li&gt;
&lt;li&gt;Tools that are not aimed at (aiding) GUI automation (e.g. database, API, network). These are not specifically for desktop, so won't be covering those.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Joe Colantonio of &lt;a href="https://testguild.com/"&gt;Test Guild&lt;/a&gt; (&lt;a href="https://twitter.com/joecolantonio"&gt;@joecolantonio&lt;/a&gt;) already has put together a very extensive list of &lt;a href="https://testguild.com/automation-tools-desktop/"&gt;Automation tools for desktop applications&lt;/a&gt;. 
Follow the link to Joe's article for a full description of each of these following tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WinAppDriver"&gt;Windows Application Driver&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/2gis/Winium"&gt;Winium&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://teststackwhite.readthedocs.io/en/latest/"&gt;White Framework&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eclipse.org/jubula/"&gt;Jubula&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://pywinauto.readthedocs.io/en/latest/contents.html"&gt;pywinauto&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oracle.com/enterprise-manager/downloads/oats-downloads.html"&gt;Oracle Application Testing Suite OATS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://sikulix.com/"&gt;SikuliX&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FlaUI/FlaUI"&gt;FlaUI&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autoitscript.com/site/"&gt;AutoIt&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zaptest.com/"&gt;Zaptest&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AirtestProject/Airtest"&gt;AirTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appium.io/"&gt;Appium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost as important as the tools for automated test execution itself, are the tools that support you in creating your automation. 
For web automation, &lt;em&gt;DevTools&lt;/em&gt; are invaluable in that respect (&lt;em&gt;&lt;F12&gt;&lt;/em&gt;, built in any modern browser). Similar tools are often not readily available in desktop applications. 
But there is definitely help available. A collection of &lt;a href="https://github.com/blackrosezy/gui-inspect-tool"&gt;GUI inspect tools can be found here&lt;/a&gt; (follow the link). 
With those tools you can inspect the application you want to test and look screen object identifiers. The one I particularly like is &lt;a href="https://github.com/blackrosezy/gui-inspect-tool/blob/master/UISpy.exe"&gt;UISpy.exe&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;A last tool I would like to mention is not necessarily a desktop GUI automation tool, but definitely one that can help in testing a Windows desktop application. 
It is called &lt;a href="https://accessibilityinsights.io/en/"&gt;Accessibility Insights&lt;/a&gt;, and is aimed at inspecting and assessing the accessibility of an application for people with and impairment like vision loss or colour blindness.&lt;/p&gt;
&lt;h1&gt;Considerations&lt;/h1&gt;
&lt;p&gt;In choosing a test automation tool or framework, in general, there are a lot of things things to consider, like:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supported programming languages&lt;/li&gt;
&lt;li&gt;Reporting capabilities&lt;/li&gt;
&lt;li&gt;Integration with other tools&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://club.ministryoftesting.com/t/considerations-when-comparing-automation-frameworks/41864"&gt;A more complete overview of general considerations can be found on the Ministry of Testing website&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;In addition to the above, there are a few things specific to desktop test automation to keep in mind:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;. Not all available tools will work with each version of Windows. We would have loved to use &lt;a href="https://github.com/microsoft/WinAppDriver"&gt;WinAppDriver&lt;/a&gt; as our platform, but it is only available for Windows 10.&lt;/li&gt;
&lt;li&gt;Windows has got &lt;a href="https://docs.microsoft.com/en-us/windows/apps/desktop/choose-your-platform"&gt;different &lt;strong&gt;application platforms&lt;/strong&gt;&lt;/a&gt;, which all work slightly differently. Be sure your tool supports the platform you want to target.&lt;/li&gt;
&lt;li&gt;Some desktop applications have got their own specific &lt;strong&gt;frontend&lt;/strong&gt;, depending on which underlying technology is being used. For example, GUIs from a JAVA or Oracle application are constructed in a different way, and there are specific tools supporting those type of applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Wrapping up&lt;/h1&gt;
&lt;p&gt;The aim of this post has not been to give an &lt;em&gt;ultimate&lt;/em&gt; list of available desktop test automation tools. 
But sure I will keep adding to it when I come across tools in this category that not yet have been mentioned. &lt;br&gt;
And please &lt;a href="https://twitter.com/PeetRonics"&gt;send me a message&lt;/a&gt; if you know of a tool that should be mentioned here.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Testing"></category><category term="Test automation"></category><category term="Windows"></category></entry><entry><title>I wish I knew more about ...</title><link href="http://peetronics.com/IWishIKnewMoreAbout.html" rel="alternate"></link><published>2020-09-03T22:45:00+01:00</published><updated>2020-09-03T22:45:00+01:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-09-03:/IWishIKnewMoreAbout.html</id><summary type="html">&lt;p&gt;On the importance of knowing what you don't know and knowing how to gain knowledge&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="I wish I knew more about, against a library backdrop" src="http://peetronics.com/images/i_wish.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;The context&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;I wish I knew more about ...&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;Something I say regularly, both in a professional and private context. There are so many things I would like to know more about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Artificial intelligence / Machine Learning&lt;/em&gt;, and how to use that in my testing profession  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Optomechanics&lt;/em&gt; (handy for my work) &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Electronics&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Linux &amp;amp; SSH&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Plumbing&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Carpentry &amp;amp; joinery&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The rules of cricket&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;British history&lt;/em&gt; (particularly handy for pub quizzes ... )  &lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Think I'm quite curious person by nature and, because of that,  I have a wide variety of interests. I always want to learn about knew things. That also means a know a little about a wide variety of things, but not a lot about a few specific topics.&lt;br&gt;
Having said that though, I've been involved in test automation for most of my professional career, so I dare to call myself a &lt;em&gt;specialist&lt;/em&gt; on that front. But then immediately add that there are plenty of others that know a lot more in that area.  &lt;/p&gt;
&lt;p&gt;Based on the above, in the remainder of this post I want to touch on several aspects to come to my mind on the subject of &lt;em&gt;knowing more about&lt;/em&gt;:&lt;/p&gt;
&lt;h1&gt;How to get to know more about something&lt;/h1&gt;
&lt;p&gt;&lt;img alt="cartoon of data-information-knowledge-insight-wisdom" src="http://peetronics.com/images/knowledge.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Every day is a school day&lt;/em&gt;, you learn every day. Be it implicitly or explicitly. I don't want to go into details on implicit learning, part from saying that it is important to acknowledge that aspect (&lt;a href="http://peetronics.com/WhatIHaveLearnedToday-000.html"&gt;I've written about that in the past&lt;/a&gt;).&lt;br&gt;
As soon as you think or say "&lt;em&gt;I wish I knew more about ...&lt;/em&gt;", you state a desire you explicitly want to learn about a topic. And then it is up to you to find a way to gather that knowledge.  &lt;/p&gt;
&lt;p&gt;There are so many ways to learn and gather knowledge:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reading&lt;/strong&gt;: books, essays, blogs, articles, manuals, technical guides&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Watching&lt;/strong&gt;: tutorials, demonstrations, conference talks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Schooling&lt;/strong&gt;: classes, courses, studies, certification, workshops&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mentoring&lt;/strong&gt;: coaching, training, consulting, counseling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Practicing&lt;/strong&gt;: challenges, exercises, dojos, hackathons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With so many different options, it is important that you find the best approach for type of knowledge gathering you want to do. Some are better suited for certain purposes than others.  Wanting to know more about philosophy probably requires a more extensive study than learning how to make kimchi.&lt;/p&gt;
&lt;p&gt;And also find a way of learning what your comfortable with. For me personally, reading is not the easiest way. I rather learn by watching and having hands-on experience.&lt;/p&gt;
&lt;h1&gt;Acknowledgement of your limited knowledge&lt;/h1&gt;
&lt;p&gt;No matter how much you know about a certain topic, there probably - no, certainly - will be people out there that know as much or even more on that same topic. Several things to be said on this:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It stimulates collaboration. Know what you know, know what you don't know, know what others know, know what others don't know. Complement each other's knowledge.&lt;/li&gt;
&lt;li&gt;It allows your to keep learning. be it directly from the others you work with, be it from the vast majority of resources that are available.&lt;/li&gt;
&lt;li&gt;It shows modesty. Which is not a bad thing ...&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In other words, don't get complacent, be open to more learning.&lt;/p&gt;
&lt;h1&gt;Being fine with not knowing everything&lt;/h1&gt;
&lt;p&gt;For sure, it can be frustrating not knowing enough about a certain topic. It can make you feel insecure (&lt;em&gt;am I good enough for this job?&lt;/em&gt;), you might see yourself as an imposter, you feel unconfident amongst colleagues and peers, and, it is just annoying not knowing the answer to the winning question in a pub quiz....  &lt;/p&gt;
&lt;p&gt;Keep in mind however, that you &lt;strong&gt;can't&lt;/strong&gt; know everything and you don't &lt;strong&gt;have&lt;/strong&gt; to know everything. Be selective on the things you want to know more about. Pick out the things that can bring you further (in any way), delve into subjects that bring you joy. And for the rest, of the things you don't know, there are people &lt;strong&gt;with&lt;/strong&gt; the knowledge you can ask and collaborate with...&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Impetus for this article&lt;/h3&gt;
&lt;p&gt;I haven't written a blog post in a while, &lt;a href="http://peetronics.com/WhatIHaveLearnedToday-retrospective.html"&gt;though I made myself a promise to write more&lt;/a&gt;. But hey, that's how things go (don't beat yourself up on that Peet!).  &lt;/p&gt;
&lt;p&gt;Recently there have been a few triggers that made me decide to write this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://club.ministryoftesting.com/c/bloggers-club"&gt;The &lt;strong&gt;Ministry of Testing&lt;/strong&gt; has reignited their &lt;strong&gt;bloggers club&lt;/strong&gt;&lt;/a&gt;. I have let a few iterations slip, but ...&lt;/li&gt;
&lt;li&gt;... &lt;a href="https://club.ministryoftesting.com/t/bloggers-club-august-september-2020-i-wish-i-knew-more-about"&gt;This month's topic&lt;/a&gt; is close to my heart and think I can write a meaningful article about it&lt;/li&gt;
&lt;li&gt;Two weeks ago, I joined in on an &lt;a href="https://club.ministryoftesting.com/t/ama-how-to-start-blogging-ama-with-louise-gibbs-bruce-chris-armstrong-lee-marshall"&gt;Ask Me Anything session on blogging&lt;/a&gt;, facilitated by the Ministry of Testing, hosted by &lt;a href="https://twitter.com/BruceOnlyBruce"&gt;@BruceOnlyBruce&lt;/a&gt;, &lt;a href="https://twitter.com/christovskia"&gt;@christovskia&lt;/a&gt;, &lt;a href="https://twitter.com/Louise_J_Gibbs"&gt;@Louise_J_Gibbs&lt;/a&gt; and &lt;a href="https://twitter.com/ThePirateTester"&gt;@ThePirateTester&lt;/a&gt;. Lots of wisdom and tips in there and enough reasons on why you should write more.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And with all of that, I hadn't any excuse anymore NOT to write a blog post. What you've been reading is the result. Hope you found it useful. Feel free to &lt;a href="https://twitter.com/PeetRonics"&gt;get in touch with me&lt;/a&gt; if you want to comment or discuss.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Ministry Of Testing"></category><category term="Blogging"></category><category term="Testing"></category></entry><entry><title>What I Have Learned Today - retrospective</title><link href="http://peetronics.com/WhatIHaveLearnedToday-retrospective.html" rel="alternate"></link><published>2019-12-07T21:00:00+00:00</published><updated>2019-12-07T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-12-07:/WhatIHaveLearnedToday-retrospective.html</id><summary type="html">&lt;p&gt;I write therefore I am&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Notepad &amp;amp; pen" src="http://peetronics.com/images/notepad.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;Earlier this week I posted the 30th article in the series “&lt;em&gt;What I Have Learned Today&lt;/em&gt;”. And that marks the end of the &lt;a href="https://medium.com/@peetronics/what-ive-learned-today-332e3b9836fd"&gt;challenge&lt;/a&gt; I set myself. Pleased that I did it, and saw it through to the end. I enjoyed the whole exercise.  &lt;/p&gt;
&lt;p&gt;Time to take stock.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What went well:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The writing itself&lt;/em&gt;. I’m not a natural writer (if that is even a thing), and was quite anxious about the prospect of having to write every day. But actually the activity felt relatively effortless.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Topics&lt;/em&gt;. Looking at the 30 articles I think there is a nice spread of topics. I will try and keep it like that.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What needs improvement:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Quality over quantity&lt;/em&gt;. Writing every day is not necessarily beneficial for the quality of the articles. Once I’ve written something, I need to leave it unpublished, come back to it later, review and amend, and then publish.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Blogging platform&lt;/em&gt;. I choose &lt;strong&gt;Medium&lt;/strong&gt; as blogging platform for a few reasons. It is free and it seems to be a popular choice amongst peer writers. But having used it for a month I don’t like the on-line text editor.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Next steps:&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Host my own blog site&lt;/em&gt;. I’m going in search of a platform that better suits my needs. And if I can’t find one, I might go and create my own.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Keep writing&lt;/em&gt;. I definitely will keep writing about things I learn. But not forcing myself. And taking my time for it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Blogging"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #030</title><link href="http://peetronics.com/WhatIHaveLearnedToday-030.html" rel="alternate"></link><published>2019-12-04T21:00:00+00:00</published><updated>2019-12-04T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-12-04:/WhatIHaveLearnedToday-030.html</id><summary type="html">&lt;p&gt;Going down the rabbit hole … of a firewall&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="image of a firewall" src="http://peetronics.com/images/firewall.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;Following on from yesterday’s win where I managed to create a &lt;a href="http://peetronics.com/WhatIHaveLearnedToday-029.html"&gt;Python Package&lt;/a&gt;, today I hit a brick wall. A firewall to be precise.  &lt;/p&gt;
&lt;p&gt;To test the ability to easily distribute the package internally, I had to set up a sandbox package management environment. That was quickly and easily done. Managed to access the web server and install package from the command line etc.  &lt;/p&gt;
&lt;p&gt;Full of positivity I pinged a message to colleagues, asking if they could give it a whirl as well. And promptly I got a reply… it wasn’t working for them. Scratching my head for a bit, I came to realise that of course I had no issues because I was running everything from my local machine. By the powers of deduction I narrowed the problem down to be the network.  &lt;/p&gt;
&lt;p&gt;And then I spent the rest of the morning figuring out how to expose the locally running web service to the company network. After lots of searching found it was a simple matter of &lt;a href="https://manage.accuwebhosting.com/knowledgebase/2886/How-to-configure-IIS-to-access-website-using-IP-address.html"&gt;opening a port&lt;/a&gt; on my local computer’s firewall. Another win for me and learned a bit about web services and firewalls along the way… 🔥  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #029</title><link href="http://peetronics.com/WhatIHaveLearnedToday-029.html" rel="alternate"></link><published>2019-12-03T21:00:00+00:00</published><updated>2019-12-03T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-12-03:/WhatIHaveLearnedToday-029.html</id><summary type="html">&lt;p&gt;Things are a lot nicer when nicely packaged up&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Python Package logo" src="http://peetronics.com/images/python-package.png"&gt;  &lt;/p&gt;
&lt;p&gt;Today I &lt;strong&gt;learned&lt;/strong&gt; to make my first Python Package 😁.  &lt;/p&gt;
&lt;p&gt;We’ve got an ever growing list of Python Projects within our company and we are no stranger to some copy-paste action of code snippets between these projects/repositories. Though there are cases where this is absolutely fine, most of the time this is bad practice.  &lt;/p&gt;
&lt;p&gt;One of the ways we’ve tried to counteract that is by keeping as much as possible within one code-base. But that is becoming more and more of a problem (and also bad practice).  &lt;/p&gt;
&lt;p&gt;Knowing about 3rd party &lt;a href="https://pypi.org/"&gt;Python Packages&lt;/a&gt; (of course we use them a lot), I have wanted to craft of my own package for some time, as a solution for sharing generic modules between projects. I always thought it required a good dose of &lt;em&gt;black magic&lt;/em&gt;, but hey, never too late to &lt;strong&gt;learn&lt;/strong&gt; that 😈.  &lt;/p&gt;
&lt;p&gt;I followed this &lt;a href="https://packaging.python.org/tutorials/packaging-projects/"&gt;tutorial&lt;/a&gt; from the Python Packaging Authority, and, surprise surprise, it was a lot easier than I thought!  &lt;/p&gt;
&lt;p&gt;For now I wouldn’t go as far as submitting the package to PyPi as it is purely for internal use. Which doesn’t mean I won’t do in (the foreseeable) future.  &lt;/p&gt;
&lt;p&gt;We do have an internal package manager called &lt;a href="https://inedo.com/proget"&gt;ProGet&lt;/a&gt;. But naive me thought this was only for .Net. Turns out it supports local Python Packages. Who knew! &lt;strong&gt;Learned&lt;/strong&gt; that as well as an added bonus today 😆.  &lt;/p&gt;
&lt;p&gt;Pretty sure I will do some more packaging this month 😉 🎄  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Python"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #028</title><link href="http://peetronics.com/WhatIHaveLearnedToday-028.html" rel="alternate"></link><published>2019-12-02T21:00:00+00:00</published><updated>2019-12-02T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-12-02:/WhatIHaveLearnedToday-028.html</id><summary type="html">&lt;p&gt;Chatting with your boss’ boss&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Boss baby" src="http://peetronics.com/images/boss-baby.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;One of the nice things at my work is the regular catch-up / check-in meetings we have. I’ve got one with my direct manager every week. We discuss priorities, objectives, private matters, … anything.  &lt;/p&gt;
&lt;p&gt;But also my boss’ boss does organise regular (though less frequent) one-on-ones with his wider team. And I find that really positive. Nice that he shows genuine interest in what you’re up to and how you’re getting on.  &lt;/p&gt;
&lt;p&gt;It helps me to frame my work (like putting things in the wider company perspective) and guide my objectives &amp;amp; goals.  &lt;/p&gt;
&lt;p&gt;This morning I had a nice chat again with him, whilst enjoying a coffee. &lt;strong&gt;Learned&lt;/strong&gt; about the latest of the company and now can align my work according to that.  &lt;/p&gt;
&lt;p&gt;Of course we overran our allotted time-slot (that is not a bad sign I think). After we eventually put the meeting to a close he said to book some time anytime I feel like. And I should take him up on that offer. I need to &lt;strong&gt;learn&lt;/strong&gt; I can take initiative in these kind of things. It is not a one-way system!!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #027</title><link href="http://peetronics.com/WhatIHaveLearnedToday-027.html" rel="alternate"></link><published>2019-12-01T21:00:00+00:00</published><updated>2019-12-01T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-12-01:/WhatIHaveLearnedToday-027.html</id><summary type="html">&lt;p&gt;Learning new coffees&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Advent calendar coffee" src="http://peetronics.com/images/advent-coffee.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;Yesterday was the 1st of December and that means the beginning of advent; and the large offering of advent calendars.  &lt;/p&gt;
&lt;p&gt;I love a nice cup of coffee in the morning and my partner knows that. She gave me an advent calendar with &lt;a href="https://brew-company.com/en-gb/"&gt;24 different coffees&lt;/a&gt;. They come in handy pouches; you pour over water and let it brew.  &lt;/p&gt;
&lt;p&gt;Now I can &lt;strong&gt;learn&lt;/strong&gt; about a new coffee every day ❤️ ☕️&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #026</title><link href="http://peetronics.com/WhatIHaveLearnedToday-026.html" rel="alternate"></link><published>2019-11-30T21:00:00+00:00</published><updated>2019-11-30T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-30:/WhatIHaveLearnedToday-026.html</id><summary type="html">&lt;p&gt;Learning from your four legged friend&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="photo of our dog, Sky" src="http://peetronics.com/images/sky.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;Not that long ago we did get a dog, Sky. He’s such a great addition to our family 🐶.  &lt;/p&gt;
&lt;p&gt;Today we took him out to an enclosed field where he could run around off the lead. He absolutely loved it; and so did we.  &lt;/p&gt;
&lt;p&gt;While being out with the dog I came to realise you can &lt;strong&gt;learn&lt;/strong&gt; so much from having a four legged friend. Could name a lot of things but you fill that in for yourself…  &lt;/p&gt;
&lt;p&gt;For now, let me enjoy the company of Sky and a dram 🍹.  &lt;/p&gt;
&lt;p&gt;Enjoy your weekend!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #025</title><link href="http://peetronics.com/WhatIHaveLearnedToday-025.html" rel="alternate"></link><published>2019-11-29T21:00:00+00:00</published><updated>2019-11-29T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-29:/WhatIHaveLearnedToday-025.html</id><summary type="html">&lt;p&gt;Recognising your role model(s)&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="“Role Model” in block letters" src="http://peetronics.com/images/role-model.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;What you can learn from your partner&lt;/h1&gt;
&lt;p&gt;It’s Friday night and I’m back home after a busy week in the office. Sitting on the sofa with my partner enjoying a 🍷 while chatting what happened this week at work.  &lt;/p&gt;
&lt;p&gt;She’s a support teacher in a primary school and always has got lots of stories about the things that happened at her work. I love listening to her experiences and adventures. It creates a bond between us and I do get lots of inspiration for my work. Yes,… I &lt;strong&gt;learn&lt;/strong&gt; a lot from her ❤️.  &lt;/p&gt;
&lt;h1&gt;Role models&lt;/h1&gt;
&lt;p&gt;One of the things I’ve said to my partner on several occasions already, and so I did tonight, is that in her profession she is a role-model to the pupils she’s working with; that teachers will be one of the persons kids will remember when they grow older.  &lt;/p&gt;
&lt;p&gt;As the conversation this night evolved, we were asking ourselves the question who our role-models were when we were young, or who are the people that inspired us. And that … was more difficult to answer than we thought. We came to the conclusion that we both can’t point out our role-models or people that inspired us when we were young. But, we do know that a lot of the people from our youth helped us form the way we are. And eventually we did point out persons from our youth that made a difference.  &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Reflect for a moment and think about the people that did make a difference to your life, who inspire(d)(s) you, who is your role-model. They are the people that implicitly or explicitly made who you are today. Just recognise that fact…  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #024</title><link href="http://peetronics.com/WhatIHaveLearnedToday-024.html" rel="alternate"></link><published>2019-11-28T21:00:00+00:00</published><updated>2019-11-28T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-28:/WhatIHaveLearnedToday-024.html</id><summary type="html">&lt;p&gt;Learn the art of noticing&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Box with offcuts of wood" src="http://peetronics.com/images/wood.jpg" width="75%"&gt;  &lt;/p&gt;
&lt;p&gt;A couple of days ago I &lt;a href="https://medium.com/@peetronics/what-i-have-learned-today-021-9d37cf33d826"&gt;wrote&lt;/a&gt; about getting crafty as a way to keep a balanced mind. And you &lt;strong&gt;learn&lt;/strong&gt; some new skills along the way as well!  &lt;/p&gt;
&lt;p&gt;For the &lt;em&gt;secret&lt;/em&gt; I’m working on I was needing some materials from the local hardware store. Got the stuff I needed and on leaving I saw you can help yourself to offcuts of wood in return for a small donation to charity. Popped in some cash, had a dive in the crate and picked up a few pieces of wood that can come in handy for future projects 🔨.  &lt;/p&gt;
&lt;h1&gt;The art of noticing&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Cover of the book ‘the art of noticing’ by Rob Walker" src="http://peetronics.com/images/the-art-of-noticing.jpg"&gt;  &lt;/p&gt;
&lt;p&gt;Don’t know why I haven’t noticed this before; must have walked past that box at least a dozen of times. But it shows it is worth to observe and pay attention to what’s around you. And that reminded me of a podcast I listened to from &lt;a href="https://www.artofmanliness.com/articles/podcast-541-the-art-of-noticing/"&gt;The Art of Manliness&lt;/a&gt; back in September. Which covered &lt;a href="https://www.amazon.co.uk/Art-Noticing-Rediscover-Really-Matters/dp/1529104432/ref=sr_1_1?crid=1RWNFDXQKJYY2&amp;amp;keywords=the+art+of+noticing&amp;amp;qid=1574978593&amp;amp;sprefix=the+art+of+not%2Caps%2C147&amp;amp;sr=8-1"&gt;The art of noticing&lt;/a&gt;, a book by Rob Walker about the benefits that come from observing and being aware. Another book added to my list to read… 📚  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #023</title><link href="http://peetronics.com/WhatIHaveLearnedToday-023.html" rel="alternate"></link><published>2019-11-27T21:00:00+00:00</published><updated>2019-11-27T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-27:/WhatIHaveLearnedToday-023.html</id><summary type="html">&lt;p&gt;Learning Lean Coffee&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Coffee mugs" src="http://peetronics.com/images/lean-coffee.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;I have participated in &lt;em&gt;Lean Coffee&lt;/em&gt; sessions in the past, but never facilitated one myself. Well, today that changed. I did facilitate one 😅  &lt;/p&gt;
&lt;p&gt;It went all right. Partly because I did some preparation by reading this &lt;a href="https://medium.com/agile-outside-the-box/lean-coffee-facilitator-s-guide-d79d9f13d0a9"&gt;article&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;So, today’s &lt;em&gt;learning&lt;/em&gt; moments were:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to facilitate a lean coffee session&lt;/li&gt;
&lt;li&gt;feedback from all the topics discussed during the lean coffee&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #022</title><link href="http://peetronics.com/WhatIHaveLearnedToday-022.html" rel="alternate"></link><published>2019-11-26T21:00:00+00:00</published><updated>2019-11-26T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-26:/WhatIHaveLearnedToday-022.html</id><summary type="html">&lt;p&gt;Visualising test output&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Kibana dashboard example" src="http://peetronics.com/images/kibana.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;A while ago I introduced &lt;a href="https://www.elastic.co/"&gt;Elastic and Kibana&lt;/a&gt; to our organisation as a means to aggregate and visualise data of all sorts. Following the good example of this &lt;a href="https://www.elastic.co/blog/improving-quality-assurance-automation-at-ramsey-solutions-with-the-elastic-stack"&gt;article&lt;/a&gt;, a few colleagues and I made a good start with it, but then left it untouched.  &lt;/p&gt;
&lt;p&gt;Today, for one of may tasks I needed to generate a report / dashboard for a new set of tests. So I decided to dust off the Elastic/Kibana work done in the past and see if I could make a nice visualisation for the new piece of work.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Another Kibana dashboard example" src="http://peetronics.com/images/kibana-example.png" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;For now I’m happy with the result, but I know that more improvements can be made. Some of the additions I would like are:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Fail&lt;/em&gt; labels for easier visibility&lt;/li&gt;
&lt;li&gt;Pair results with log files  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elastic and Kibana has got a steep &lt;strong&gt;learning&lt;/strong&gt; curve. So it’s a matter of keep using it to get better at it…  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #021</title><link href="http://peetronics.com/WhatIHaveLearnedToday-021.html" rel="alternate"></link><published>2019-11-25T21:00:00+00:00</published><updated>2019-11-25T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-25:/WhatIHaveLearnedToday-021.html</id><summary type="html">&lt;p&gt;Getting crafty to keep your mind sharp&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Templatemaker.nl" src="http://peetronics.com/images/templatemaker.png"&gt;  &lt;/p&gt;
&lt;h1&gt;Keeping the balance&lt;/h1&gt;
&lt;p&gt;When you have a job like me, where you sit a big part of your day &lt;em&gt;behind&lt;/em&gt; your computer (or in &lt;em&gt;front&lt;/em&gt; of a computer screen; same thing, weird isn’t it?), you need to have something outside your work that is away from your screen. At least, that is my belief as I think it will help keeping you sane.  &lt;/p&gt;
&lt;p&gt;And that &lt;em&gt;something else&lt;/em&gt; can be anything. One of the things I like to do is cooking. I’ve already &lt;a href="https://medium.com/@peetronics/what-i-have-learned-today-006-57b6ee7fff0a"&gt;written&lt;/a&gt; about that 2 weeks ago.  &lt;/p&gt;
&lt;h1&gt;Getting crafty&lt;/h1&gt;
&lt;p&gt;With the holiday season upon us, another thing I like to do is making my own Christmas decorations and little Christmas presents. Last year I made little Rudolph hangers from corks.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Cork Rudolph reindeers" src="http://peetronics.com/images/rudolph.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;For this year I’m wanting to make my own gift boxes. Measuring and drawing them completely from scratch might be a step to far. Luckily I &lt;strong&gt;learned&lt;/strong&gt; about a website that does the heavy lifting for you. It’s called &lt;a href="https://www.templatemaker.nl/en/"&gt;templatemaker.nl&lt;/a&gt;. It has got heaps of box designs to choose from and each can be adjusted to your liking. Once you’ve downloaded your template you can further personalise it.  &lt;/p&gt;
&lt;p&gt;Time to get my craft knife out! 🎄  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #020</title><link href="http://peetronics.com/WhatIHaveLearnedToday-020.html" rel="alternate"></link><published>2019-11-24T21:00:00+00:00</published><updated>2019-11-24T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-24:/WhatIHaveLearnedToday-020.html</id><summary type="html">&lt;p&gt;The buzz you get from talking to strangers&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Actually the title should read ”What I Have Learned Yesterday”. I had a long drive and wasn’t in the mood for writing.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Picture of the Oddfellows Arms in Sherburn in Elmet" src="http://peetronics.com/images/oddfellows.jpg" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Meeting new people&lt;/h1&gt;
&lt;p&gt;It might be surprising but I find it hard to meet new people and start a conversation. I rather be me by myself than throwing myself into a conversation with strangers. but this weekend I learned to step beyond that…  &lt;/p&gt;
&lt;p&gt;Saturday night I had to stay over in a place I’ve never been. Found myself some &lt;a href="https://oddfellowsarms.pub/"&gt;accommodation&lt;/a&gt;, and had planned to stay in my room and minding my own business.  &lt;/p&gt;
&lt;p&gt;But after a long drive I did fancy a beer so made my way to the pub and ordered one. Settled myself in a corner of an empty table, having my phone and pint as company.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="pint glass" src="http://peetronics.com/images/pint.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;p&gt;After a while some regulars came in and joined the table I was sitting at. First I was feeling a bit uncomfortable and wanted to get back to my room after finishing my pint. But after the few polite exchanges of “&lt;em&gt;what brings you here&lt;/em&gt;” etc. a conversation started flowing. And it was good.  &lt;/p&gt;
&lt;p&gt;Before I knew it last orders were called and a final round of drinks were ordered. After that I retreated to my room and looked back at a wonderful night I had.  &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It felt good to “&lt;em&gt;get out of my shell&lt;/em&gt;” and strike up a conversation with strangers. Yes, I was anxious and felt uncomfortable at first but &lt;strong&gt;learned&lt;/strong&gt; that those feelings are unfounded. I did get a buzz out of it and I had an opportunity to hone my &lt;em&gt;social skills&lt;/em&gt;.  &lt;/p&gt;
&lt;p&gt;Knowing that, in future I will more easily get into a conversation with people I don’t know; there’s nothing to loose. Though I know that there still will be a bit of anxiousness. But nothing that cannot be cured with a bit of Dutch Courage…  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #019</title><link href="http://peetronics.com/WhatIHaveLearnedToday-019.html" rel="alternate"></link><published>2019-11-23T21:00:00+00:00</published><updated>2019-11-23T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-23:/WhatIHaveLearnedToday-019.html</id><summary type="html">&lt;p&gt;The importance of code reviews&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="github code review example" src="http://peetronics.com/images/code-review.png" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;The importance of code reviews&lt;/h1&gt;
&lt;p&gt;Code reviews are one of many important mechanisms (or rituals if you like) to ensure &lt;em&gt;quality&lt;/em&gt; of your software project/product. Potential bugs can be caught early as well as negative performance / security implications.  &lt;/p&gt;
&lt;p&gt;What I find though, what is not mentioned enough, is that code reviews are also a great vehicle for knowledge transfer. By participating as a reviewer you can &lt;strong&gt;learn&lt;/strong&gt; a lot.  &lt;/p&gt;
&lt;p&gt;That’s why I make an effort to get involved in code reviews as much as possible.  &lt;/p&gt;
&lt;h1&gt;Respectful Reviews&lt;/h1&gt;
&lt;p&gt;While enjoying my morning cup of coffee and reading through blog posts, I came across this &lt;a href="https://testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html"&gt;article&lt;/a&gt; from the &lt;a href="https://testing.googleblog.com/"&gt;Google Testing Blog&lt;/a&gt;. It is list of &lt;em&gt;do’s&lt;/em&gt; and &lt;em&gt;don’ts&lt;/em&gt; for code reviews, aimed both at authors and reviewers. A quick read and very helpful tips to make reviews better.  &lt;/p&gt;
&lt;p&gt;As an added bonus the article can be printed on one &lt;a href="https://docs.google.com/document/d/1_Gljf1TMTV2WPsiXCdk8oIkiq6uiajN_IqGdlD7u3Mc/edit"&gt;A-4&lt;/a&gt;, which you can hang on the toilet of your office. Probably something I will do when I’m back in the office 😄.  &lt;/p&gt;
&lt;h1&gt;Going down the rabbit hole&lt;/h1&gt;
&lt;p&gt;The last bullet-point of that article refers to a page on how to deal with &lt;a href="https://google.github.io/eng-practices/review/reviewer/standard.html#conflicts"&gt;conflicts&lt;/a&gt; during code reviews. Which is part of a wider set of &lt;a href="https://google.github.io/eng-practices/"&gt;guidelines&lt;/a&gt; around code reviews that Google produced. More reading, more &lt;strong&gt;learning&lt;/strong&gt; and something to share with the team.  &lt;/p&gt;
&lt;p&gt;Have a great weekend!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Software Development"></category><category term="Testing"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #018</title><link href="http://peetronics.com/WhatIHaveLearnedToday-018.html" rel="alternate"></link><published>2019-11-22T21:00:00+00:00</published><updated>2019-11-22T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-22:/WhatIHaveLearnedToday-018.html</id><summary type="html">&lt;p&gt;Breaking the habit of using 'import *'&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="removestar page header" src="http://peetronics.com/images/removestar.png" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Good coding practices&lt;/h1&gt;
&lt;p&gt;I’m a strong believer of using good coding practices and will advocate for it wherever and whenever I can. Be it in &lt;em&gt;code reviews&lt;/em&gt;, &lt;em&gt;community of practice&lt;/em&gt; sessions, &lt;em&gt;mentoring&lt;/em&gt; etc.  &lt;/p&gt;
&lt;p&gt;It is commonly known in Python not to use &lt;code&gt;import *&lt;/code&gt;. If you want to know why, read &lt;a href="https://www.geeksforgeeks.org/why-import-star-in-python-is-a-bad-idea/"&gt;this&lt;/a&gt;. It makes me flinch every time I see the usage of that in Python code I lay my eyes on.  &lt;/p&gt;
&lt;h1&gt;RemoveStar&lt;/h1&gt;
&lt;p&gt;What’s out there in Python-land keeps amazing me. Today I &lt;strong&gt;learned&lt;/strong&gt; about a Python module called &lt;a href="https://www.asmeurer.com/removestar/"&gt;RemoveStar&lt;/a&gt;. It scans a file, directory or module, and points out usages of &lt;code&gt;import *&lt;/code&gt;. Or of you like, it will auto replace with proper imports.  &lt;/p&gt;
&lt;h1&gt;Who knew&lt;/h1&gt;
&lt;p&gt;Luckily all usages of &lt;code&gt;import *&lt;/code&gt; have been eradicated in our code bases; or so I thought…  &lt;/p&gt;
&lt;p&gt;I tried the &lt;em&gt;RemoveStar&lt;/em&gt; tool on one of our repositories. Lo and behold, 3 instances of &lt;code&gt;import *&lt;/code&gt; where found. For now, rather than refactoring the code, I will have a chat with the team what I found.  &lt;/p&gt;
&lt;p&gt;Have a good weekend!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Python"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #017</title><link href="http://peetronics.com/WhatIHaveLearnedToday-017.html" rel="alternate"></link><published>2019-11-21T21:00:00+00:00</published><updated>2019-11-21T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-21:/WhatIHaveLearnedToday-017.html</id><summary type="html">&lt;p&gt;Making your life easier with NFC tags&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="desk with various nfc tags" src="http://peetronics.com/images/nfc-tags.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;Having a smart-phone with a built-in &lt;a href="https://en.wikipedia.org/wiki/Near-field_communication"&gt;Near Field Communication reader&lt;/a&gt; (NFC) I wanted to try to expand its usage beyond the handy tap-and-pay. Recently I read an article on handy &lt;a href="https://techwiser.com/cool-uses-for-nfc-tags/"&gt;usages&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;I ordered a few NFC stickers and badges which arrived today. Found an &lt;a href="https://play.google.com/store/apps/details?id=com.wakdev.nfctools.pro"&gt;app&lt;/a&gt; to read-write tags. I managed to create a few badges that, when swiped:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Switches on Bluetooth and open my podcast app (stuck it on my ear-bud case)&lt;/li&gt;
&lt;li&gt;Sets an alarm and put phone in do-not-disturb mode (will have it on my bedside table) &lt;/li&gt;
&lt;li&gt;Switches on Bluetooth and open Google maps (will stick it on my car dashboard)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only having &lt;strong&gt;learned&lt;/strong&gt; some basic usages, I think there are plenty more ways these tags can come in handy.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #016</title><link href="http://peetronics.com/WhatIHaveLearnedToday-016.html" rel="alternate"></link><published>2019-11-20T21:00:00+00:00</published><updated>2019-11-20T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-20:/WhatIHaveLearnedToday-016.html</id><summary type="html">&lt;p&gt;Python debugging from the command line&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Python debugging with PDB" src="http://peetronics.com/images/python-debugging.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Lazy man’s debugging&lt;/h1&gt;
&lt;p&gt;Sure I’m not the only one out, but I’m still the kind of person that does debugging by dotting the code with &lt;code&gt;print()&lt;/code&gt; statements. And with the release of &lt;a href="https://docs.python.org/3/whatsnew/3.8.html"&gt;Python 3.8&lt;/a&gt; and the f-string support it seems that they want me to keep to stick to that habit:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eric_idle&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;member_since&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="si"&gt;=}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;member_since&lt;/span&gt;&lt;span class="si"&gt;=}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eric_idle&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;member_since&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1975&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That’s a nice addition.  &lt;/p&gt;
&lt;h1&gt;A better alternative&lt;/h1&gt;
&lt;p&gt;At my work I’m not making a secret of my approach to debugging and a colleague once pointed out the debug capabilities of the &lt;a href="https://www.jetbrains.com/pycharm/"&gt;IDE&lt;/a&gt;. Tried that but never caught on with me. So yes, I still have the ubiquitous print statements everywhere, which I always forget to remove.  &lt;/p&gt;
&lt;p&gt;Today I was joking about my debug super powers again and then another colleague pointed out &lt;a href="https://docs.python.org/3/library/pdb.html"&gt;PDB&lt;/a&gt;; a Python debugger that can be used from the command line. I found a handy &lt;a href="https://realpython.com/python-debugging-pdb/"&gt;tutorial&lt;/a&gt; from &lt;em&gt;Real Python&lt;/em&gt; which I followed which got me started.  &lt;/p&gt;
&lt;p&gt;Still a lot to &lt;strong&gt;learn&lt;/strong&gt; on this, but practice makes perfect. So I will stick with this. So far so good.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Python"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #015</title><link href="http://peetronics.com/WhatIHaveLearnedToday-015.html" rel="alternate"></link><published>2019-11-19T21:00:00+00:00</published><updated>2019-11-19T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-19:/WhatIHaveLearnedToday-015.html</id><summary type="html">&lt;p&gt;Remark — a lightweight slideshow tool&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Remark" src="http://peetronics.com/images/remark.png"&gt;  &lt;/p&gt;
&lt;p&gt;This morning I was preparing a presentation. Being fed up with the bulkiness of MS PowerPoint I was wanting to have lighter alternative. Having seen other people using similar products, I did find a presentation tool called &lt;a href="https://github.com/gnab/remark"&gt;Remark&lt;/a&gt;, a slideshow based on JavaScript that can run in a browser.  &lt;/p&gt;
&lt;p&gt;I had a play with it (bit of a &lt;strong&gt;learning&lt;/strong&gt; curve), and initial thoughts on it are positive. What I like about it:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;. You only need a few files downloaded without any installation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Markdown&lt;/strong&gt;. You can specify a whole presentation from a text editor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Presenter mode&lt;/strong&gt;. With built in timer and the speaker notes coming from the same markdown&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The examples on their &lt;a href="https://github.com/gnab/remark"&gt;project page&lt;/a&gt; are great to get you started but I already made a few &lt;em&gt;improvements&lt;/em&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Put the markdown in in a separate file&lt;/li&gt;
&lt;li&gt;Using a local copy of the CSS&lt;/li&gt;
&lt;li&gt;Using a local copy of &lt;code&gt;remark.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For me this works better as you don’t need an internet connection and it allows for easier editing.&lt;/p&gt;
&lt;p&gt;&lt;img alt="HTML example. code snippet in article text" src="http://peetronics.com/images/remark-example.png" width="80%"&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
 &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;keywords&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Conference feedback, presentation, remark&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Conference Feedback&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Conference feedback&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../assets/presentation-stylesheet.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../assets/remark.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;slideshow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;remark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="nx"&gt;sourceUrl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;./Conference-Feedback.md&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nx"&gt;ratio&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4:3&amp;#39;&lt;/span&gt;   &lt;span class="p"&gt;});&lt;/span&gt;
       &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Productivity"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #014</title><link href="http://peetronics.com/WhatIHaveLearnedToday-014.html" rel="alternate"></link><published>2019-11-18T21:00:00+00:00</published><updated>2019-11-18T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-18:/WhatIHaveLearnedToday-014.html</id><summary type="html">&lt;p&gt;“I see some Python code and want to paint it Black”&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Black logo" src="http://peetronics.com/images/black.png" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Podcasts to stay up-to-date&lt;/h1&gt;
&lt;p&gt;One of my favourite work-related podcasts is &lt;a href="https://pythonbytes.fm"&gt;PythonBytes&lt;/a&gt;. In each half-hour episode the hosts &lt;a href="https://twitter.com/mkennedy"&gt;@mkennedy&lt;/a&gt; and &lt;a href="https://twitter.com/brianokken"&gt;@brianokken&lt;/a&gt; give you the latest Python news. A great and easy way to stay up-to-date. Oh, and you’ve got to love the jokes at the end of each episode 😆.  &lt;/p&gt;
&lt;p&gt;While listening to episode &lt;a href="https://pythonbytes.fm/episodes/show/156/all-the-programming-lols"&gt;#156&lt;/a&gt; this morning, I learned that one of the must-have Python modules, &lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt;:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Has got a new release&lt;/li&gt;
&lt;li&gt;Is probably moving out of Beta on… Black Friday 😃&lt;/li&gt;
&lt;li&gt;Has an online &lt;a href="https://black.now.sh"&gt;playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Why automatic code formatting&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Black&lt;/em&gt; advertises itself as “&lt;em&gt;The Uncompromising Code Formatter for Python&lt;/em&gt;”. In short, it will deal with the code formatting automatically and it adheres to the &lt;a href="https://www.python.org/dev/peps/pep-0008/"&gt;PEP8&lt;/a&gt; style guide.  &lt;/p&gt;
&lt;p&gt;This means that, when applied on your project, you can concentrate on the code itself, without having to worry about the formatting and style. Automatic code formatting will ensure &lt;strong&gt;uniformity&lt;/strong&gt; of your code and it will make &lt;strong&gt;code reviews&lt;/strong&gt; a lot quicker and easier.  &lt;/p&gt;
&lt;p&gt;To make your life even easier, you can integrate it in a &lt;a href="https://ljvmiranda921.github.io/notebook/2018/06/21/precommits-using-black-and-flake8/"&gt;pre-commit hook&lt;/a&gt;.  &lt;/p&gt;
&lt;h1&gt;Scepticism&lt;/h1&gt;
&lt;p&gt;When we first introduced &lt;em&gt;Black&lt;/em&gt; in our project, we were faced with scepticism from some team members. Getting responses like: “Sure that cannot be working fine”, and “a good coder should do his/her own formatting/styling”.  &lt;/p&gt;
&lt;p&gt;But we pushed through, and luckily &lt;em&gt;Black&lt;/em&gt; it is now widely adopted in the team. If only we would have known about the playground earlier, the adoption might have been a bit easier…  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Python"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #013</title><link href="http://peetronics.com/WhatIHaveLearnedToday-013.html" rel="alternate"></link><published>2019-11-17T21:00:00+00:00</published><updated>2019-11-17T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-17:/WhatIHaveLearnedToday-013.html</id><summary type="html">&lt;p&gt;Honing your skills by play&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Image of the card game Set" src="http://peetronics.com/images/set.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Play&lt;/h1&gt;
&lt;p&gt;It is well known that playing board- and card-games has got numerous benefits. Plenty of &lt;a href="https://www.dumblittleman.com/benefits-of-playing-board-games/"&gt;articles&lt;/a&gt; have been written about it so I will refrain from re-iterating. Part from all the mentioned benefits, for me probably the biggest one is that it is fun 😄. So it’s no secret I’m always up for a game of any sort.  &lt;/p&gt;
&lt;h1&gt;Set&lt;/h1&gt;
&lt;p&gt;A card game I particularly like is &lt;a href="https://en.wikipedia.org/wiki/Set_(card_game)"&gt;Set&lt;/a&gt;. Simple in concept, yet very gripping. Simplest explanation is to find three cards that are completely similar or opposite in shape, filling, colour or number (follow the link for full rules).The player that sees the similarities / opposites first gets the cards. Most cards wins.I believe that particularly this is a game that sits close to my profession as software tester, in which looking for patterns, similarities, opposites is a key part of your job.  &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;So yes, even on a lazy Sunday while playing games, I’m learning to hone my professional skills…Have fun!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category><category term="Testing"></category><category term="Skills"></category></entry><entry><title>What I Have Learned Today - #012</title><link href="http://peetronics.com/WhatIHaveLearnedToday-012.html" rel="alternate"></link><published>2019-11-16T21:00:00+00:00</published><updated>2019-11-16T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-16:/WhatIHaveLearnedToday-012.html</id><summary type="html">&lt;p&gt;Dealing with distraction&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Photo of an Apple IWatch, showing the fitness tracker screen" src="http://peetronics.com/images/fitness-tracker.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Distraction&lt;/h1&gt;
&lt;p&gt;One of the things that I constantly try to get better at is not getting distracted. Yes, I can get easily distracted. Not in a worrying sense but still.  &lt;/p&gt;
&lt;p&gt;For example, if I’m in a room where there is a television playing while having a conversation with somebody, sooner or later I will start looking at the moving images on screen. Nothing to worry about, but still not very polite for the person I’m having a chat with.  &lt;/p&gt;
&lt;p&gt;Luckily I’m well aware of my flaw, Which means I can put mechanisms in place to improve. In the example of the playing television, if possible I try to sit with my back to the screen.  &lt;/p&gt;
&lt;h1&gt;Productivity killer&lt;/h1&gt;
&lt;p&gt;Distraction can be a productivity killer. In my case it is not too bad, but yet I want to be as productive as possible. Needless to say that in my work I want to remove distraction triggers as much as I can. One of the biggest ones for me are &lt;em&gt;notifications&lt;/em&gt;. Think Outlook, Skype, Slack, all the social medias; that kind of stuff. If not strictly needed I will switch off notifications completely, or at least go into the settings of any app and tweak the notification settings to my liking. Of course , these ones below always get a &lt;strong&gt;block&lt;/strong&gt; from me:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Facebook wants to show notifications: allow / block" src="http://peetronics.com/images/desktop-notifications.png"&gt;  &lt;/p&gt;
&lt;h1&gt;Distracted by your wrist&lt;/h1&gt;
&lt;p&gt;Having a smart-watch is not good in relation to distraction. Sure, once I got myself one it was great to be able to get notified on your watch, without having to look at your phone. But I have switched that off for a while now and it has been a blessing.Today, in my continuous effort to cut distractions I’ve now switched off the last bit of attention-grabbing from my wrist; the &lt;em&gt;fitness tracking&lt;/em&gt;. So no more stand reminders 10 minutes to the hour while I’m in full flow of coding. No more “&lt;em&gt;you still need to burn xx calories to reach your daily goal&lt;/em&gt;” while I’m driving.  &lt;/p&gt;
&lt;p&gt;Lets see how it goes. Probably I won’t miss it a bit!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Productivity"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #011</title><link href="http://peetronics.com/WhatIHaveLearnedToday-011.html" rel="alternate"></link><published>2019-11-15T21:00:00+00:00</published><updated>2019-11-15T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-15:/WhatIHaveLearnedToday-011.html</id><summary type="html">&lt;p&gt;Test before push&lt;/p&gt;</summary><content type="html">&lt;p&gt;A quick one today&lt;br&gt;
I did a code refactor &lt;a href="http://peetronics.com/WhatIHaveLearnedToday-008.html"&gt;3 days ago&lt;/a&gt;. Today I &lt;strong&gt;learnt&lt;/strong&gt; the importance of testing before pushing your code changes.  &lt;/p&gt;
&lt;p&gt;Because of the refactoring, a portion of the nightly regression tests misbehaved. And I only realised today 😦. Of course I did test the few scenarios before committing the changes; yet… I didn’t cater for all possible paths. Luckily a fix was readily available.  &lt;/p&gt;
&lt;p&gt;So next time I do a refactor, I need to remember to test, test, and… TEST!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category><category term="Testing"></category></entry><entry><title>What I Have Learned Today - #010</title><link href="http://peetronics.com/WhatIHaveLearnedToday-010.html" rel="alternate"></link><published>2019-11-14T21:00:00+00:00</published><updated>2019-11-14T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-14:/WhatIHaveLearnedToday-010.html</id><summary type="html">&lt;p&gt;Common pathname manipulations in Python&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="code snippet" src="http://peetronics.com/images/realpath.png" width="80%"&gt; &lt;/p&gt;
&lt;p&gt;I was fed up with all the hard-coded paths in our code repository (Python). Thought there must be a better, more elegant way. And it appears there is.  &lt;/p&gt;
&lt;p&gt;Today I &lt;strong&gt;learned&lt;/strong&gt; about &lt;code&gt;os.path.realpath(path)&lt;/code&gt;. This function resolves the full path of the specified file or directory, based on the path from where your script is run. An example implementation:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os.path&lt;/span&gt;

&lt;span class="n"&gt;resource_directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;realpath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resource_directory&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# &amp;gt;&amp;gt;&amp;gt; C:\git_repos\01_Private_Projects\Python_snippets\output&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Currently I’m going through our codebase and see where we can replace hard coded paths with the &lt;code&gt;os.path.realpath&lt;/code&gt; function. Neat! Full documentation on this function and the whole &lt;code&gt;os.path&lt;/code&gt; module can be found &lt;a href="https://docs.python.org/3/library/os.path.html"&gt;here&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bonus tip&lt;/strong&gt;: In the code snippet above you can see I only import &lt;code&gt;os.path&lt;/code&gt; and not the whole &lt;code&gt;os&lt;/code&gt; module. In Python is good practice only to import what you need. Import more can pollute the namespace and can cause confusion and conflicts. Never ever do &lt;code&gt;import * from blah&lt;/code&gt; !!!  &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;It is worth solving bug-bears. In this example, code-base. Doing so will expand the knowledge of the thing you are working on/with.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Python"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #009</title><link href="http://peetronics.com/WhatIHaveLearnedToday-009.html" rel="alternate"></link><published>2019-11-13T21:00:00+00:00</published><updated>2019-11-13T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-13:/WhatIHaveLearnedToday-009.html</id><summary type="html">&lt;p&gt;Reviewing abstracts for talks — learn from others&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="review testbash abstracts" src="http://peetronics.com/images/review-testbash-abstracts.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Reviewing abstracts&lt;/h1&gt;
&lt;p&gt;In the past I have tweeted about the benefits of reviewing abstracts for talks. In this case the ones for upcoming &lt;em&gt;TestBashes&lt;/em&gt; from the &lt;em&gt;Ministry of Testing&lt;/em&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/peetronics/status/1108145209269993474"&gt;Tweet of peetronics/1108145209269993474&lt;/a&gt;&lt;/blockquote&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It provides valuable feedback for the applicants&lt;/li&gt;
&lt;li&gt;It is an easy way to give back to the (testing) community&lt;/li&gt;
&lt;li&gt;It gives you a sneak peek into what is current in the field of testing&lt;/li&gt;
&lt;li&gt;It gives you ideas for submitting your own abstracts (if you’ve got the ambition into public speaking)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All in all lots of opportunities to &lt;strong&gt;learn&lt;/strong&gt;. I encourage everyone to get involved in this. Follow &lt;a href="https://www.ministryoftesting.com/testbash/review"&gt;this link&lt;/a&gt;.  &lt;/p&gt;
&lt;h1&gt;Reviewing and writing feedback&lt;/h1&gt;
&lt;p&gt;I tend to do this activity on a regular basis; once or twice a month, like tonight. I had some time set aside to go through a batch of abstracts. Finished quicker than I thought as after 6 or so proposals there were no more left for me to review 😅.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="message: There are no proposals to review at this time" src="http://peetronics.com/images/no-reviews.png" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;That aside, I want to focus on what I &lt;strong&gt;learn&lt;/strong&gt; from these kind of exercises. As well as the benefits laid out in the aforementioned bullet-points, doing an activity like this will sharpen your skills like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Critically reading&lt;/strong&gt; a piece of text. Sometimes you grasp an abstract in a first read, but often it needs to be read two or more times to get an understanding of the applicant’s intent.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Making a judgement&lt;/strong&gt; based on what you’ve read. Once the proposal is understood, an assessment needs to be made, using predefined criteria (like: context, relevance, originality etc.).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Formulating constructive feedback&lt;/strong&gt;. And when the assessment is made, this needs to be relayed back to the organisation and author. And especially this is an area where I continue to learn. It’s harder than you think to write something that can be used by the recipient as input to improve upon.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Happy learning!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Public Speaking"></category><category term="What I Have Learned Today"></category><category term="Ministry Of Testing"></category></entry><entry><title>What I Have Learned Today - #008</title><link href="http://peetronics.com/WhatIHaveLearnedToday-008.html" rel="alternate"></link><published>2019-11-12T21:00:00+00:00</published><updated>2019-11-12T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-12:/WhatIHaveLearnedToday-008.html</id><summary type="html">&lt;p&gt;The power of refactoring&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="image of code snippet that is used in this article" src="http://peetronics.com/images/behave-context.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Refactoring&lt;/h1&gt;
&lt;p&gt;I’m no stranger to code refactoring. It is a well adopted practice within our team. It has many benefits. Read &lt;a href="https://www.cuelogic.com/blog/what-is-refactoring-and-why-is-it-important"&gt;this blog post&lt;/a&gt; if you want to know why.  &lt;/p&gt;
&lt;p&gt;Some benefits not listed in the article above:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get a better understanding of your code-base&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; about the coding practices your colleagues use&lt;/li&gt;
&lt;li&gt;Get to know about used frameworks, modules and packages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And that is what happened today; I &lt;strong&gt;learned&lt;/strong&gt; more about a framework we use. &lt;/p&gt;
&lt;h1&gt;Behave&lt;/h1&gt;
&lt;p&gt;In our Python test automation framework we use &lt;a href="https://behave.readthedocs.io/en/latest/index.html"&gt;Behave&lt;/a&gt;, a Behaviour Driven Development implementation in Python. It has a concept of &lt;a href="https://behave.readthedocs.io/en/latest/context_attributes.html"&gt;context&lt;/a&gt; as a way to pass around data. We do use &lt;em&gt;context&lt;/em&gt; in our framework but not to its fullest potential.  &lt;/p&gt;
&lt;p&gt;While working on an area of our code-base today, I noticed that the way we deal with (global) parameters is quite inconsistent and convoluted. Knowing about behave context I took the opportunity to read a bit more about the workings and see if this could be used as a replacement of global variables.  &lt;/p&gt;
&lt;p&gt;One hour later, I pushed a PR which gets rid of the messy variables implementation and replaces it with the more elegant context concept. See the following code snippet as a small example:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;user_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_user_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;userdata&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;************************&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;************************&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_fail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_data_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;ALLOW_FAIL&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ALLOW_FAIL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_data_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;APP_NAME&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;APP_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;response_times&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_data_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;RESPONSE_TIMES&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RESPONSE_TIMES&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configuration_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_data_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;CONFIGURATION_FILE&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CONFIGURATION_FILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dev_mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_user_data_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user_data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;DEV_MODE&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DEV_MODE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category><category term="Python"></category></entry><entry><title>What I Have Learned Today - #007</title><link href="http://peetronics.com/WhatIHaveLearnedToday-007.html" rel="alternate"></link><published>2019-11-11T21:00:00+00:00</published><updated>2019-11-11T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-11:/WhatIHaveLearnedToday-007.html</id><summary type="html">&lt;p&gt;How Much is 12,000 satellites?&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="3,600 dots representing the number of seconds in a hour" src="http://peetronics.com/images/seconds-in-an-hour.png"&gt;&lt;/p&gt;
&lt;h1&gt;How Much is 12,000 satellites?&lt;/h1&gt;
&lt;p&gt;What I have &lt;strong&gt;learned&lt;/strong&gt; today was triggered by a Slack message. Somebody posted about &lt;a href="https://www.mynews13.com/fl/orlando/news/2019/11/09/spacex-launch-starlink-satellites-falcon-9-rocket"&gt;The Spacex launch today&lt;/a&gt; that will bring 60 Starlink satellites into orbit with the earth. These 60 are part of a plan to bring a total nearly 12,000 of these satellites into space. So the question was asked how this would even look like. Which got my brain working on ways to comprehend large numbers…  &lt;/p&gt;
&lt;h1&gt;Mechanisms to comprehend large numbers&lt;/h1&gt;
&lt;p&gt;I’ve come across several ways to try to get a grasp on big numbers. One of the easiest ones is to &lt;strong&gt;visualise&lt;/strong&gt;. &lt;a href="https://waitbutwhy.com/2014/11/from-1-to-1000000.html"&gt;This article&lt;/a&gt; simply represents numbers with dots. For example, the following dots represent the number of living languages in the world:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="6,500 representing the living languages in the world (2,000 with under 1,000 speakers)" src="http://peetronics.com/images/languages-541x600.png"&gt;&lt;/p&gt;
&lt;p&gt;And &lt;a href="https://lime.link/blog/visualizing-crowd-sizes/"&gt;this link&lt;/a&gt; gives a nice visual overview of different crowd sizes (&lt;em&gt;note that I came across this website by reading another blog post last Saturday but can’t find it anymore&lt;/em&gt;). 10,000 people (closest I could find to 12,000 satellites):  &lt;/p&gt;
&lt;p&gt;&lt;img alt="10,000 in a sports arena watching tennis" src="http://peetronics.com/images/10000.jpeg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Book cover of Humble Pi, by Matt Parker" src="http://peetronics.com/images/humble-pi.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Another way to comprehend is to &lt;strong&gt;transform&lt;/strong&gt; a number into something else. I picked this up when I read &lt;a href="https://www.amazon.co.uk/Humble-Pi-Comedy-Maths-Errors/dp/0241360234"&gt;Humble Pi, by Matt Parker&lt;/a&gt;. He was once asked in an interview how big £1 trillion of debt is. Just simply saying “it is really big” doesn’t work. So as an example he transformed it into seconds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;million&lt;/strong&gt; seconds translates to &lt;strong&gt;11 days&lt;/strong&gt; and 14 hours&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;billion&lt;/strong&gt; seconds is over &lt;strong&gt;31 years&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;trillion&lt;/strong&gt; seconds is well after the year &lt;strong&gt;33,700ce&lt;/strong&gt;(!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another example of transformation is done in the following video, where the history of the universe is compared with a row of dominoes. Out of 13,799 dominoes, spanning from the big bang to now, only the last 3 represents where human life takes shape. Let that sink in for a moment…  &lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                    &lt;iframe width="640" height="390"
                        src='https://www.youtube.com/embed/ObngtuPFI8A'
                        frameborder='0' webkitAllowFullScreen
                        mozallowfullscreen allowFullScreen&gt;
                    &lt;/iframe&gt;
                &lt;/span&gt;&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;So, next time when you see a big number, or have to imagine what an x amount of y looks like, try to &lt;strong&gt;visualise&lt;/strong&gt; or &lt;strong&gt;transform&lt;/strong&gt;.&lt;/p&gt;
&lt;h1&gt;Update&lt;/h1&gt;
&lt;p&gt;Just after I posted this, Lifehacker released an &lt;a href="https://lifehacker.com/use-wolfram-alpha-to-conceptualize-giant-numbers-1839775534"&gt;article&lt;/a&gt; completely in line with the above. They point out you can use Wolfram Alpha to help you conceptualise large numbers. Thanks for the tip 😄  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #006</title><link href="http://peetronics.com/WhatIHaveLearnedToday-006.html" rel="alternate"></link><published>2019-11-10T21:00:00+00:00</published><updated>2019-11-10T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-10:/WhatIHaveLearnedToday-006.html</id><summary type="html">&lt;p&gt;I tried a new recipe&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="picture of Mediterranean fish parcels" src="http://peetronics.com/images/fish-parcel.jpg"&gt;&lt;/p&gt;
&lt;h1&gt;Cooking&lt;/h1&gt;
&lt;p&gt;Another thing I like to do in the weekend is trying out new recipes. Cooking for me is a great way to get your mind away from all the hustle and bustle of work.  &lt;/p&gt;
&lt;p&gt;I don’t consider myself a culinary wizard, but I can put a decent tasty meal on the table. I haven’t got enough confidence in the kitchen to cook completely &lt;em&gt;recipe-free&lt;/em&gt;. Rather give me the instructions which I will then follow step by step. Once I made a recipe a few times, I might venture in changing things up a bit.  &lt;/p&gt;
&lt;p&gt;What I want to highlight here is that cooking also is an opportunity to learn. Learning about flavours, learning about timing, learning about kitchen-skills.  &lt;/p&gt;
&lt;p&gt;I feel strongly about learning things not directly related to your work as I believe it helps to keep a balance. And cooking for me is a great way for doing that.  &lt;/p&gt;
&lt;h1&gt;Today’s meal&lt;/h1&gt;
&lt;p&gt;My partner and I try to have a balanced diet. One of the things that can’t be missed from that is fish, which we eat at least once a week. And that is what was on the menu today. I found a recipe for &lt;a href="https://www.bbcgoodfood.com/recipes/2383/mediterranean-fish-parcels-"&gt;Mediterranean fish parcels&lt;/a&gt;. Locked myself up in the kitchen, music on, poured a drink and cooked this tasty meal. Enjoy!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #005</title><link href="http://peetronics.com/WhatIHaveLearnedToday-005.html" rel="alternate"></link><published>2019-11-09T21:00:00+00:00</published><updated>2019-11-09T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-09:/WhatIHaveLearnedToday-005.html</id><summary type="html">&lt;p&gt;Using custom searches in the browser bar&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Weekend learning&lt;/h1&gt;
&lt;p&gt;Although it is the weekend, it doesn’t mean you stop learning. I’ve set myself the challenge to blog every day for a month about a thing I have learned and Saturdays and Sundays are no exceptions on that.  &lt;/p&gt;
&lt;p&gt;One of the &lt;em&gt;rituals&lt;/em&gt; I have in the weekend is to catch up on the list of saved websites I’ve aggregated over the week. These come from various sources, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RSS feeds I follow&lt;/li&gt;
&lt;li&gt;Podcasts I listen to&lt;/li&gt;
&lt;li&gt;Something mentioned by a friend or colleague&lt;/li&gt;
&lt;li&gt;What I come across on social media&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The app I use for that is &lt;a href="https://app.getpocket.com/"&gt;Pocket&lt;/a&gt;. It has got a browser extension for Chrome and when installed on your phone, you can share links to it from other apps.  &lt;/p&gt;
&lt;p&gt;A lot of the collected links are things to read, which I try to do and then delete the link, or file it away if I want to go back to it in future.  &lt;/p&gt;
&lt;p&gt;Other things I tend to collect are mentions of software, Python packages and similar. These quite often involve downloading them and have a play with it. Resulting in either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nah, not for me, delete&lt;/li&gt;
&lt;li&gt;This might come in handy for a future project, file away for later&lt;/li&gt;
&lt;li&gt;Wow this is awesome, keep using it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The thing I learned today falls in the latter category.&lt;/p&gt;
&lt;h1&gt;Enhanced custom searches in the browser bar&lt;/h1&gt;
&lt;p&gt;I already use custom searches in the browser bar. It is a quick way to search specific sites. For example, with typing &lt;code&gt;wiki &amp;lt;space&amp;gt;&lt;/code&gt; in the search bar, followed by a search term I can directly search in Wikipedia.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Example of custom searches in Chrome" src="http://peetronics.com/images/custom-searches.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lifehacker.com/five-custom-searches-you-should-enable-in-your-browser-5971715"&gt;The article&lt;/a&gt; from Lifehacker I read this morning explains how to take these custom searches to the next level. I tried a few things from it and have now expanded the search bar of my browser with the following keywords:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;map&lt;/strong&gt; — gives directions on google map from my home address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;trans&lt;/strong&gt; — translates from English to Dutch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;vert&lt;/strong&gt; — translates from Dutch to English&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ggl&lt;/strong&gt; — does a google search excluding results from Stackoverflow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Probably there will be more clever searches I can add…  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Productivity"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #004</title><link href="http://peetronics.com/WhatIHaveLearnedToday-004.html" rel="alternate"></link><published>2019-11-08T21:00:00+00:00</published><updated>2019-11-08T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-08:/WhatIHaveLearnedToday-004.html</id><summary type="html">&lt;p&gt;Putting pairwise testing into practice&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="number_of_permutations = 3 * 6 * 8 * 2 * 13 * 2 * 2 * 2 - print(number_of_permutations) - 29952" src="http://peetronics.com/images/permutations.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Pairwise Testing&lt;/h1&gt;
&lt;p&gt;I have learned about &lt;a href="https://www.softwaretestinghelp.com/what-is-pairwise-testing/"&gt;pairwise testing&lt;/a&gt; (or sometimes called all-pairs testing) in the past as being a good test specification technique to come up with a meaningful and manageable set of test cases. Until now I have experimented with it but never used it in anger.    &lt;/p&gt;
&lt;h1&gt;All-pairs in practice&lt;/h1&gt;
&lt;p&gt;At the moment I am working on a test for a complex feature of the system pictured below:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Optos Silverstone; ultra-widefield retinal imaging device with integrated, UWF-guided swept source OCT." src="http://peetronics.com/images/indy-right.png"&gt;&lt;/p&gt;
&lt;p&gt;In a workshop session this morning I gathered subject matter experts, and defined a set of parameters relevant for the feature under test. And there are a lot of them, with each a number of possible values.  &lt;/p&gt;
&lt;p&gt;Getting a full coverage with all possible permutations would have resulted in &lt;strong&gt;29952 test cases&lt;/strong&gt;. For reference, with the way the system works (keep complex in mind) it takes 1/2 an hour to fully run and analyse 1 test case. This would take almost 2 years(!) back-to-back testing to get through.  &lt;/p&gt;
&lt;p&gt;With using the test specification technique of pairwise testing, I managed to reduce the set of test cases to 62. That is a big reduction but it doesn’t compromise on coverage. With execution these tests (still 31 hours but it only will be run over the weekend) there is confidence this feature will be adequately covered.  &lt;/p&gt;
&lt;h1&gt;Tools&lt;/h1&gt;
&lt;p&gt;To make life easier applying pairwise testing it is highly recommended to use a tool. There are various ones out there; a list of them are mentioned in this &lt;a href="https://www.softwaretestinghelp.com/what-is-pairwise-testing/"&gt;article&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;The one tool I particularly like is the Pairwise Independent Combinatorial Tool &lt;a href="https://github.com/microsoft/pict"&gt;(PICT)&lt;/a&gt; from Microsoft. (turns out they do make useful products 😉). The mean reason I like is, that it is one executable which completely runs from the command line. It has got a lot of flexibility and executes quick.  &lt;/p&gt;
&lt;p&gt;A command line tool might not be your cup of tea; have a look at the other tools 😃.  &lt;/p&gt;
&lt;p&gt;Happy pairwising!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Testing"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #003</title><link href="http://peetronics.com/WhatIHaveLearnedToday-003.html" rel="alternate"></link><published>2019-11-07T21:00:00+00:00</published><updated>2019-11-07T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-07:/WhatIHaveLearnedToday-003.html</id><summary type="html">&lt;p&gt;Is about project Galahad; A European Union funded project to improve screening and basic diagnostics for glaucoma&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Screenshot of Project Galahad video" src="http://peetronics.com/images/galahad.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Show and Tell&lt;/h1&gt;
&lt;p&gt;Today I attended a &lt;em&gt;show and tell&lt;/em&gt; session at work. It is a monthly 1-hour event with 20 minute time-slots where people from all departments in the organisation can tell about what they are working on.  &lt;/p&gt;
&lt;p&gt;These sessions are a great way to &lt;strong&gt;learn&lt;/strong&gt; about new things that are not necessarily directly related to your day-to-day job but are fundamental to the context you work in. The information &lt;em&gt;will&lt;/em&gt; come in handy at some point!  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Vertical transfoveal OCT of an eye with epiretinal fibrosis Image courtesy of Rigshospitalet (Copenhagen)" src="http://peetronics.com/images/oct.png"&gt;&lt;/p&gt;
&lt;h1&gt;Project Galahad&lt;/h1&gt;
&lt;p&gt;The topic of today’s session was about &lt;a href="https://galahad-project.eu/"&gt;project Galahad&lt;/a&gt;, which main objective is to improve screening and basic diagnostics for &lt;a href="https://www.nhs.uk/conditions/glaucoma/"&gt;glaucoma&lt;/a&gt;. The project is funded by the European Union (better together), and &lt;a href="https://www.optos.com/"&gt;Optos&lt;/a&gt;, the company I work for is part of the consortium. That makes me proud to work for this company, but that aside.  &lt;/p&gt;
&lt;p&gt;I must admit that a lot of the information that was presented goes way above my head; we’ve got some really clever people working at Optos, and sometimes I feel I’m the less clever one 😏.  &lt;/p&gt;
&lt;p&gt;But I feel it is important to be exposed to information that you might not immediately grasp. It exposes areas where there is &lt;strong&gt;room for more learning&lt;/strong&gt;. And it also will add to your baggage of knowledge that you can apply in your work, and beyond.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #002</title><link href="http://peetronics.com/WhatIHaveLearnedToday-002.html" rel="alternate"></link><published>2019-11-06T21:00:00+00:00</published><updated>2019-11-06T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-06:/WhatIHaveLearnedToday-002.html</id><summary type="html">&lt;p&gt;Today I learned a new word, flinciple.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="flinciple - noun - A fundamental truth or proposition that serves as the foundation for a system of belief, behaviour or for a chain of reasoning; but which is able to be modified to respond to altered circumstances" src="http://peetronics.com/images/flinciple-definition.png" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;I was chatting with my partner earlier and the subject came to &lt;em&gt;principles&lt;/em&gt;, and that sometimes it needs to be possible to deviate from them if circumstances call for it. In other words, be able to apply principles in a &lt;em&gt;flexible&lt;/em&gt; manner.  &lt;/p&gt;
&lt;p&gt;And then there it was; she produced the most wonderful new word I’ve heard in ages: &lt;strong&gt;flinciple&lt;/strong&gt; (after discarding other candidates like &lt;em&gt;flexiple&lt;/em&gt; and &lt;em&gt;princible&lt;/em&gt;).  &lt;/p&gt;
&lt;p&gt;The context in which it was used is about cooking vegetarian:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;principle&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;cook&lt;/span&gt; &lt;span class="n"&gt;fish&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vegetarian&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;vegan&lt;/span&gt; &lt;span class="n"&gt;meals&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;circumstances&lt;/span&gt; &lt;span class="n"&gt;require&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;can&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;flexible&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;adjust&lt;/span&gt; &lt;span class="n"&gt;accordingly&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Surely the concept of having flexible principles can apply to the workplace as well. I’m definitely going to start using it.  &lt;/p&gt;
&lt;p&gt;a word of two other words smashed is called a &lt;a href="https://en.wikipedia.org/wiki/Portmanteau"&gt;portmanteau&lt;/a&gt;. I do like a good portmanteau, and flinciple is a beautiful specimen. It conveys in a single word what otherwise would need two words. Portmanteaus are omnipresent in the English language and new ones appear constantly. Here are some examples:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spork — spoon &amp;amp; fork&lt;/li&gt;
&lt;li&gt;Fortnight — fourteen &amp;amp; nights&lt;/li&gt;
&lt;li&gt;Internet — international &amp;amp; network&lt;/li&gt;
&lt;li&gt;Flextension — flexible &amp;amp; extension&lt;/li&gt;
&lt;li&gt;Brexit — Britain &amp;amp; exit (terrible prospect)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go and start using &lt;em&gt;flinciple&lt;/em&gt; yourself in your language. Or even better, try to come up with some of your own.  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #001</title><link href="http://peetronics.com/WhatIHaveLearnedToday-001.html" rel="alternate"></link><published>2019-11-05T21:00:00+00:00</published><updated>2019-11-05T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-05:/WhatIHaveLearnedToday-001.html</id><summary type="html">&lt;p&gt;Use a keyboard shortcut to start a windows application&lt;/p&gt;</summary><content type="html">&lt;h1&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;Right mouse click on an application shortcut (in Windows) and there you can assign a key-binding for quick launching the application.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of the windows shortcut configuration window" src="http://peetronics.com/images/notepad++.exe - Shortcut Properties 2019-11-05 20.47.37.PNG"&gt;&lt;/p&gt;
&lt;h1&gt;A bit of personal history&lt;/h1&gt;
&lt;p&gt;When I first started to use computers in the early 80’s, there was no such thing as a mouse. The only input device to use was the keyboard. And I liked it. It was quick, minimum arm movement, and definitely no &lt;a href="https://en.wikipedia.org/wiki/Repetitive_strain_injury"&gt;Repetitive Strain Injury&lt;/a&gt; (RSI).  
Once I got my first computer with a mouse (an Amiga 500 if you want to know), I slowly got into the habit of using the mouse more often. As that was the way to navigate a Graphical User Interface isn’t it?  
After I sold my Amiga to my brother (which I sometimes regret), I bought a personal computer. That was still in the MS-DOS days. But, it had a mouse, which I used wherever I could of course. And once we moved into the windows-era there was no turning back.&lt;br&gt;
Till I started working… with the (over-)excessive use of the mouse I developed a bit of RSI. And that was the trigger for me to start using the keyboard in favour if the mouse, where possible.  &lt;/p&gt;
&lt;h1&gt;Enter the tricks ‘n tools&lt;/h1&gt;
&lt;p&gt;To help me battle my &lt;em&gt;mouse-addiction&lt;/em&gt; I started to use tricks and tools to replace common mouse actions. Here’s a short overview of the things I picked up over the years:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;ctrl&amp;gt;-&amp;lt;c&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ctrl&amp;gt;-&amp;lt;v&amp;gt;&lt;/code&gt; and more. The collection of the obvious keyboard shortcuts.&lt;/li&gt;
&lt;li&gt;tab-complete. On the command line, pressing tab will auto-complete path- and file-names for you. Saves a lot of typing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrow-up&lt;/code&gt;, &lt;code&gt;arrow-down&lt;/code&gt;. On the command line, this will go through your previously entered commands.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb?hl=en"&gt;Vimium Chrome extension&lt;/a&gt;. In Chrome I use VIM key-bindings to navigate through web pages, without having to use a mouse.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autohotkey.com/"&gt;Autohotkey&lt;/a&gt;. A tool to create your own key-bindings. For example I use it to start applications and to control audio (volume up/down, stop/pause/play).&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;But what have you actually learned today?&lt;/h1&gt;
&lt;p&gt;So, today I had to change something in an application shortcut. Opened a file explorer (&lt;code&gt;&amp;lt;winkey&amp;gt;-&amp;lt;e&amp;gt;&lt;/code&gt;) and right-clicked (mouse…) on the shortcut. 
Did the thing I had to change and then I noticed there’s a 'shortcut key' field you can set. 
Gave it a try with &lt;code&gt;&amp;lt;ctrl&amp;gt;-&amp;lt;alt&amp;gt;-&amp;lt;n&amp;gt;&lt;/code&gt; for Notepad++ and it works!  &lt;/p&gt;
&lt;p&gt;Step-by-step:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find the (or create an) shortcut for the application you want to create a key-binding for&lt;/li&gt;
&lt;li&gt;Right mouse click on the shortcut&lt;/li&gt;
&lt;li&gt;Click in the shortcut key field&lt;/li&gt;
&lt;li&gt;Use a combination of &lt;code&gt;&amp;lt;ctrl&amp;gt;-&amp;lt;alt&amp;gt;-&lt;/code&gt; with any other key pressed simultaneously. You could use &lt;code&gt;&amp;lt;ctrl&amp;gt;-&amp;lt;shift&amp;gt;-&lt;/code&gt; as well if you want&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; (don’t click ok with your mouse)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This technically means you don’t have to install third-party tools to be able to launch applications from the keyboard.  
I probably will keep using Autohotkey as that’s already set up the way I want (and has got the ability to export / import your bindings).&lt;br&gt;
But I can imagine there are situations where it is not allowed to install additional applications, and then the built in windows key-bindings can come in handy.&lt;/p&gt;
&lt;h1&gt;To be noted&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I’ve never used MacOS in anger and I’m not using Linux in a professional capacity (though I use that OS for nerdy private projects). So the bulk of my computing experience is on the Windows OS.&lt;/li&gt;
&lt;li&gt;Although I’m using VIM key-bindings in the browser I’ve never really got into using VIM itself as my main text editor. Maybe I will set another challenge in the future, forcing myself to use VIM straight for a period and then maybe it will stick.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt; &lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Productivity"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #000</title><link href="http://peetronics.com/WhatIHaveLearnedToday-000.html" rel="alternate"></link><published>2019-11-04T21:00:00+00:00</published><updated>2019-11-04T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-04:/WhatIHaveLearnedToday-000.html</id><summary type="html">&lt;p&gt;A challenge to share on a daily basis what I’ve learned. It is important that you keep learning. Recognise that you learn something every day; However the small it is. I’m going to set myself a challenge to share on a daily basis what I’ve learned that day.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;99 Things You Can Do To Become A Better Software Tester&lt;/h1&gt;
&lt;p&gt;Back in August 2018 a question was asked on the Ministry of Testing website on &lt;a href="https://club.ministryoftesting.com/t/99-things-you-can-do-to-become-a-better-software-tester/17923"&gt;99 Things You Can Do To Become A Better Software Tester&lt;/a&gt;. I contributed to that as follows:&lt;/p&gt;
&lt;p&gt;&lt;img alt="image of thread response; transcript below this image" src="http://peetronics.com/images/never-stop-learning-club.PNG"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Never&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="n"&gt;learning&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;At&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;every&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;ask&lt;/span&gt; &lt;span class="n"&gt;myself&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;question&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;what&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt; &lt;span class="n"&gt;learned&lt;/span&gt; &lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="err"&gt;?”&lt;/span&gt;  
&lt;span class="n"&gt;No&lt;/span&gt; &lt;span class="n"&gt;matter&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="n"&gt;small&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;every&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;there&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;ve&lt;/span&gt; &lt;span class="n"&gt;come&lt;/span&gt; &lt;span class="n"&gt;across&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;didn&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;know&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; 
&lt;span class="n"&gt;All&lt;/span&gt; &lt;span class="n"&gt;these&lt;/span&gt; &lt;span class="n"&gt;little&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;big&lt;/span&gt; &lt;span class="n"&gt;things&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;that&lt;/span&gt; &lt;span class="n"&gt;matter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;learnings&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;tester&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Definitely give that link above a read. There is a lot to be learned from that thread :-).  &lt;/p&gt;
&lt;h1&gt;More on learning&lt;/h1&gt;
&lt;p&gt;Learning doesn’t have to be explicit and by doing the mental exercise of asking myself &lt;em&gt;what I have learned today&lt;/em&gt; I “force” myself to also recognise the implicit learning.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="quote: “Once you stop learning, you start dying” -Albert Einstein-" src="http://peetronics.com/images/lifelong-learning1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;By far I’m not an expert in this field and I speak solely from my own experience. However, I do read the occasional thing, and this &lt;a href="https://blueprintleadership.com/just-keep-learning-just-keep-learning/"&gt;article&lt;/a&gt; links very well with what I’m talking about here.  &lt;/p&gt;
&lt;p&gt;As well as reading, I’m an avid podcast and audiobook listener. In the latest episode of &lt;a href="http://theguiltytester.libsyn.com/the-guilty-tester-episode-12-testbash-manchester-unexpo-2019-part-1"&gt;The Guilty Tester Podcast&lt;/a&gt; (at time of writing), Dave Duke (&lt;a href="https://twitter.com/theguiltytester"&gt;@theguiltytester&lt;/a&gt;) talks about his recent attendance of TestBash Manchester 2019. He had a stand at the UnExpo where he collected things what people felt guilty about in testing. It touched on learning and here is some of the advice from this podcast, but make sure to subscribe and listen to the whole episode as well:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Don&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;feel&lt;/span&gt; &lt;span class="n"&gt;guilty&lt;/span&gt; &lt;span class="n"&gt;about&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;want&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;learn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Just&lt;/span&gt; &lt;span class="n"&gt;learn&lt;/span&gt; &lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;even&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;might&lt;/span&gt; &lt;span class="n"&gt;turn&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wrong&lt;/span&gt; &lt;span class="n"&gt;thing&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;This&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;far&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="n"&gt;better&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="n"&gt;learning&lt;/span&gt; &lt;span class="n"&gt;nothing&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;The challenge&lt;/h1&gt;
&lt;p&gt;I attended the same conference as Dave Duke. One of the presenters was &lt;a href="https://twitter.com/lisihocke"&gt;@lisihocke&lt;/a&gt;. She sets herself a personal challenge every year and at the conference she talked about her challenge to become more &lt;em&gt;code confident&lt;/em&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;blockquote class="twitter-tweet" align="center"&gt;&lt;a href="https://twitter.com/lisihocke/status/1179783401139818498"&gt;Tweet of lisihocke/1179783401139818498&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;p&gt;Inspired by Lisi and her great talk I wanted to set my own challenge.  &lt;/p&gt;
&lt;p&gt;As said, asking myself the question (as per the title) has been mainly a mental exercise, and so far that has been perfectly fine. But now I want to get it out of my head.&lt;/p&gt;
&lt;p&gt;As a challenge I will start to share the outcome of my daily mental exercise of asking what I have learned today with the whole wide world. Starting tomorrow (05–11–2019), I will post on Twitter a link to this Medium blog with what I have learned. Initially I will do this daily for a month and then take stock. I will see if I stick with the format, keep up with the frequency… or maybe stop altogether :-(.  &lt;/p&gt;
&lt;p&gt;Items to be expect can be of all sorts. Work related, testing, personal, hobby, culinary, politics, and who knows what. So as you can see, much more than testing alone.  &lt;/p&gt;
&lt;p&gt;For now I will use Medium as a blogging platform. I’ve got plans for something different, but that will be a whole different challenge. More on that in the future (thanks Lisi!).  &lt;/p&gt;
&lt;p&gt;Look out for the hashtag #WhatIHaveLearnedToday  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Ministry of Testing"></category><category term="What I Have Learned Today"></category></entry></feed>
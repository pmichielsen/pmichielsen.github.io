<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PeetRonics' blog - Testing</title><link href="http://peetronics.com/" rel="alternate"></link><link href="http://peetronics.com/feeds/testing.xml" rel="self"></link><id>http://peetronics.com/</id><updated>2020-10-30T22:30:00+00:00</updated><subtitle>All can be true!</subtitle><entry><title></title><link href="http://peetronics.com/GrabTheOpportunity.html" rel="alternate"></link><published>2020-10-30T22:30:00+00:00</published><updated>2020-10-30T22:30:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-10-30:/GrabTheOpportunity.html</id><summary type="html">&lt;p&gt;What’s the best career advice you’ve ever had?&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="cartoon of someone walking the career path" src="http://peetronics.com/images/grab-the-opportunity.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;For the last few weeks I have been pondering over &lt;a href="https://club.ministryoftesting.com/t/bloggers-club-september-october-2020-what-s-the-best-career-advice-you-ve-ever-had"&gt;this month's topic of the Ministry of Testing blogging club (&lt;em&gt;What’s the best career advice you’ve ever had?&lt;/em&gt;)&lt;/a&gt;, and wondering if I can write something meaningful about that.&lt;br&gt;
It was only after I went to bed one night and I couldn't immediately catch sleep, that it suddenly dawned on me the best advice I got was when I was still studying.&lt;br&gt;
One lecturer (can't remember who) of my studies in The Netherlands gave this little piece of wisdom: &lt;strong&gt;grab the opportunity&lt;/strong&gt;.&lt;br&gt;
Looking back at my career so far it has been the advice I have followed and lived by a lot; often more unknowingly than not...  &lt;/p&gt;
&lt;h2&gt;Study&lt;/h2&gt;
&lt;p&gt;As said, the advice to &lt;em&gt;to grab the opportunity&lt;/em&gt; was given by a lecturer while I was &lt;a href="https://www.avans.nl/opleidingen/opleidingzoeker/business-it--management-breda-voltijd-bachelor/introductie#"&gt;studying at the HEAO in Breda&lt;/a&gt;.
But I can't remember who. There was another tutor however, called Ferrie Veen, and I always enjoyed his lectures. Probably because of his approach to teaching, which I really liked.&lt;br&gt;
One of the assignments he gave us was to compare yourself with an object and use that in a job application letter. I wrote a whole letter around a paperclip; the gist of it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uncomplicated&lt;/li&gt;
&lt;li&gt;Being flexible&lt;/li&gt;
&lt;li&gt;Versatile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But more on that later...&lt;/p&gt;
&lt;p&gt;The last part of the study was a student placement at a company for half a year, and work on a pre-defined practical assignment.
That went quite successful for me and as a result I was offered a job at that company after my graduation.
The first opportunity on my career path I grabbed. I landed a job without having to use my paperclip application letter, yet ...&lt;/p&gt;
&lt;h2&gt;Applying for my first job&lt;/h2&gt;
&lt;p&gt;Even before I started that job, the company went bust and I still had to go in search for a job. 
Looking back I could have seen it coming, but I was young and a bit naive (lesson learned).  &lt;/p&gt;
&lt;p&gt;Luck had it that, around the same time, a local bank where I lived was hiring for a role that matched my qualifications.
I immediately grabbed the opportunity to go to that bank and asked for the manager who was hiring, so I could introduce myself.
Of course I still had to write an official application, which I did. And yes, I did use the paperclip analogy.
I did get the job and I worked there for 2 1/2 years.&lt;/p&gt;
&lt;h2&gt;Moving town&lt;/h2&gt;
&lt;p&gt;After my then partner graduated, she got a job at a tourist office, in a completely different part of the country. This meant We had to move and I had to look for a new job.
Got rejected a few times on jobs I applied for locally, which was of course dissapointing.  &lt;/p&gt;
&lt;p&gt;A friend of my kept telling about his work and that they were always looking for colleagues to join their team. But that was a 2 hour commute one way. 
I still applied though and was offered a job. And by coincidence at the same time I got offered a job closer to home.
After much deliberation I decided to take the offer further from home. Could have been interpreted as a stupid decision, but I never regretted it.
In the 6 1/2 years I worked there I had many opportunities to:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work on great projects for different clients in a wide variety of industries&lt;/li&gt;
&lt;li&gt;Share knowledge with colleagues as a trainer&lt;/li&gt;
&lt;li&gt;Get to know lots of people with whom some of them I am still in touch with&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Moving abroad&lt;/h2&gt;
&lt;p&gt;After our first child was born, something had to change in my work situation. I was away still a lot for work. And as a result of that, I only saw my son during the week when he was asleep.
Weighing the options, we decided to take the opportunity to settle ourselves abroad and start a Bed &amp;amp; Breakfast in Scotland. Something we often talked about.
As financial support it was wise to still have a steady income, so I went in search for a job. I had the luck that a software company in Aberdeen was hiring for a role that suited me perfectly.
I applied, had a telephone interview, flew out for a face to face interview, and soon after an offer was made. I willingly accepted, and so we packed our stuff and moved across the pond.  &lt;/p&gt;
&lt;p&gt;In that company, I started as the first tester in a team of 12 developers. Over the years, I built up a structured testing discipline and culture. In the 12 years at that company I've grabbed many opportunities to grow mysself. 
By the time I left that company, a team of 15 test engineers was in place which I was in charge of.  &lt;/p&gt;
&lt;p&gt;Regarding my B&amp;amp;B adventures, I can tell many a story about that. But I will leave that for another day.&lt;/p&gt;
&lt;h2&gt;Redundancy&lt;/h2&gt;
&lt;p&gt;It was not my plan to leave the company yet, as there still were so much more opportunities to be grabbed.
But beacause of a organisational restructure I was made redundant.  &lt;/p&gt;
&lt;p&gt;I knew there weren't many job opportunities close by. So I had to look further afield for my next gig, and needed to be aware that it probably would take a bit longer to be back in fulltine work.
Then, a week into me &lt;em&gt;sitting&lt;/em&gt; at home, a friend pointed out that a local whisky distillery was looking for a tour guide. Well, that was an opportunity I couldn't let pass.
I showed my interest and soon I was showing tourists around &lt;a href="https://www.chivas.com/en-GB/visit-strathisla"&gt;Scotland's most beautiful distillery&lt;/a&gt;, while I still kept applying for jobs.  &lt;/p&gt;
&lt;p&gt;Luckily it didn't take too long to be made a new offer for a job. But it meant I was working away from home again ...&lt;/p&gt;
&lt;h2&gt;Current day&lt;/h2&gt;
&lt;p&gt;Have been in my current job for almost 3 years now, and it already has given me lots of new opportunities:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The opportunity to work on medical devices. Something I haven't done yet in my 20+ year career.&lt;/li&gt;
&lt;li&gt;The opportunity to get my hands dirty again. Not being in a managerial role and doing actual testing.&lt;/li&gt;
&lt;li&gt;The opportunity to work with hard- and software. A whole new dimension and things to take into consideration.&lt;/li&gt;
&lt;li&gt;The opportunity to get into public speaking. A manager that encourages to submit papers for conferences.&lt;/li&gt;
&lt;li&gt;The opportunity to get more involved with the testing community. A Ministry of Testing Meetup closer by.&lt;/li&gt;
&lt;li&gt;The opportunity to make changes to the organisation. Bringing in 20+ years of experience.&lt;/li&gt;
&lt;li&gt;The opportunity to build a Community of Practice. Finding likeminded colleagues.&lt;/li&gt;
&lt;li&gt;... &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;In conclusion&lt;/h2&gt;
&lt;p&gt;In your career, there are many things coming on your path you can't foresee, and not always have influence on.
You can steer your career a lot yourself, but sometimes you need to look for opportunities, grab them, and help that get you further.  &lt;/p&gt;
&lt;p&gt;lets see what's the next opportunity ...&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Testing"></category></entry><entry><title>GUI test automation for Windows desktop</title><link href="http://peetronics.com/GUITestAutomationForWindowsDesktop.html" rel="alternate"></link><published>2020-09-15T21:00:00+01:00</published><updated>2020-09-15T21:00:00+01:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-09-15:/GUITestAutomationForWindowsDesktop.html</id><summary type="html">&lt;p&gt;A collection of resources to be used for Windows desktop test automation, and things to consider in choosing your tooling&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Screenshot of a windows 3.1 desktop" src="http://peetronics.com/images/windows-desktop.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;If you look at conference talk and workshop topics, (online) articles, tutorials, and courses, you could get the impression that most software testing revolves around &lt;strong&gt;web&lt;/strong&gt; and &lt;strong&gt;mobile&lt;/strong&gt;. 
&lt;a href="https://www.practitest.com/resource/state-of-testing-report-2020/"&gt;The 2020 state of testing report&lt;/a&gt;, curated and published by Practitest, underwrites that. Web and mobile have got the biggest share of the technologies being tested (75% and 59% respectively). 
&lt;strong&gt;Desktop&lt;/strong&gt; is coming in third with 45%. Which makes you think why this technology is not getting more attention in the world of testing? 
It's about time that we put the limelight on &lt;strong&gt;desktop testing&lt;/strong&gt;; &lt;strong&gt;Windows&lt;/strong&gt; desktop &lt;strong&gt;automated&lt;/strong&gt; testing to be precise.  &lt;/p&gt;
&lt;p&gt;The first part of this article will give an overview of available tools for Windows desktop automation. 
Then it will go into the things to consider in choosing a tool. &lt;/p&gt;
&lt;h1&gt;Available tools&lt;/h1&gt;
&lt;p&gt;This will not be a complete overview on available desktop test automation tools. Things that are currently not included (but might be added later):  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Paid for tools. I have not done enough research into these. Only open source tools are listed.&lt;/li&gt;
&lt;li&gt;Tools for other operating systems than Windows (e.g. Linux, MacOS), as I've not had a lot of exposure on this.&lt;/li&gt;
&lt;li&gt;Tools that are not aimed at (aiding) GUI automation (e.g. database, API, network). These are not specifically for desktop, so won't be covering those.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Joe Colantonio of &lt;a href="https://testguild.com/"&gt;Test Guild&lt;/a&gt; (&lt;a href="https://twitter.com/joecolantonio"&gt;@joecolantonio&lt;/a&gt;) already has put together a very extensive list of &lt;a href="https://testguild.com/automation-tools-desktop/"&gt;Automation tools for desktop applications&lt;/a&gt;. 
Follow the link to Joe's article for a full description of each of these following tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WinAppDriver"&gt;Windows Application Driver&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/2gis/Winium"&gt;Winium&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://teststackwhite.readthedocs.io/en/latest/"&gt;White Framework&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eclipse.org/jubula/"&gt;Jubula&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://pywinauto.readthedocs.io/en/latest/contents.html"&gt;pywinauto&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.oracle.com/enterprise-manager/downloads/oats-downloads.html"&gt;Oracle Application Testing Suite OATS&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://sikulix.com/"&gt;SikuliX&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FlaUI/FlaUI"&gt;FlaUI&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autoitscript.com/site/"&gt;AutoIt&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zaptest.com/"&gt;Zaptest&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AirtestProject/Airtest"&gt;AirTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://appium.io/"&gt;Appium&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost as important as the tools for automated test execution itself, are the tools that support you in creating your automation. 
For web automation, &lt;em&gt;DevTools&lt;/em&gt; are invaluable in that respect (&lt;em&gt;&lt;F12&gt;&lt;/em&gt;, built in any modern browser). Similar tools are often not readily available in desktop applications. 
But there is definitely help available. A collection of &lt;a href="https://github.com/blackrosezy/gui-inspect-tool"&gt;GUI inspect tools can be found here&lt;/a&gt; (follow the link). 
With those tools you can inspect the application you want to test and look screen object identifiers. The one I particularly like is &lt;a href="https://github.com/blackrosezy/gui-inspect-tool/blob/master/UISpy.exe"&gt;UISpy.exe&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;A last tool I would like to mention is not necessarily a desktop GUI automation tool, but definitely one that can help in testing a Windows desktop application. 
It is called &lt;a href="https://accessibilityinsights.io/en/"&gt;Accessibility Insights&lt;/a&gt;, and is aimed at inspecting and assessing the accessibility of an application for people with and impairment like vision loss or colour blindness.&lt;/p&gt;
&lt;h1&gt;Considerations&lt;/h1&gt;
&lt;p&gt;In choosing a test automation tool or framework, in general, there are a lot of things things to consider, like:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supported programming languages&lt;/li&gt;
&lt;li&gt;Reporting capabilities&lt;/li&gt;
&lt;li&gt;Integration with other tools&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://club.ministryoftesting.com/t/considerations-when-comparing-automation-frameworks/41864"&gt;A more complete overview of general considerations can be found on the Ministry of Testing website&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;In addition to the above, there are a few things specific to desktop test automation to keep in mind:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Supported operating systems&lt;/strong&gt;. Not all available tools will work with each version of Windows. We would have loved to use &lt;a href="https://github.com/microsoft/WinAppDriver"&gt;WinAppDriver&lt;/a&gt; as our platform, but it is only available for Windows 10.&lt;/li&gt;
&lt;li&gt;Windows has got &lt;a href="https://docs.microsoft.com/en-us/windows/apps/desktop/choose-your-platform"&gt;different &lt;strong&gt;application platforms&lt;/strong&gt;&lt;/a&gt;, which all work slightly differently. Be sure your tool supports the platform you want to target.&lt;/li&gt;
&lt;li&gt;Some desktop applications have got their own specific &lt;strong&gt;frontend&lt;/strong&gt;, depending on which underlying technology is being used. For example, GUIs from a JAVA or Oracle application are constructed in a different way, and there are specific tools supporting those type of applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Wrapping up&lt;/h1&gt;
&lt;p&gt;The aim of this post has not been to give an &lt;em&gt;ultimate&lt;/em&gt; list of available desktop test automation tools. 
But sure I will keep adding to it when I come across tools in this category that not yet have been mentioned. &lt;br&gt;
And please &lt;a href="https://twitter.com/PeetRonics"&gt;send me a message&lt;/a&gt; if you know of a tool that should be mentioned here.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Testing"></category><category term="Test automation"></category><category term="Windows"></category></entry><entry><title>I wish I knew more about ...</title><link href="http://peetronics.com/IWishIKnewMoreAbout.html" rel="alternate"></link><published>2020-09-03T22:45:00+01:00</published><updated>2020-09-03T22:45:00+01:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2020-09-03:/IWishIKnewMoreAbout.html</id><summary type="html">&lt;p&gt;On the importance of knowing what you don't know and knowing how to gain knowledge&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="I wish I knew more about, against a library backdrop" src="http://peetronics.com/images/i_wish.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;The context&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;I wish I knew more about ...&lt;/em&gt;  &lt;/p&gt;
&lt;p&gt;Something I say regularly, both in a professional and private context. There are so many things I would like to know more about:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Artificial intelligence / Machine Learning&lt;/em&gt;, and how to use that in my testing profession  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Optomechanics&lt;/em&gt; (handy for my work) &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Electronics&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Linux &amp;amp; SSH&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Plumbing&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;Carpentry &amp;amp; joinery&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;The rules of cricket&lt;/em&gt;  &lt;/li&gt;
&lt;li&gt;&lt;em&gt;British history&lt;/em&gt; (particularly handy for pub quizzes ... )  &lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Think I'm quite curious person by nature and, because of that,  I have a wide variety of interests. I always want to learn about knew things. That also means a know a little about a wide variety of things, but not a lot about a few specific topics.&lt;br&gt;
Having said that though, I've been involved in test automation for most of my professional career, so I dare to call myself a &lt;em&gt;specialist&lt;/em&gt; on that front. But then immediately add that there are plenty of others that know a lot more in that area.  &lt;/p&gt;
&lt;p&gt;Based on the above, in the remainder of this post I want to touch on several aspects to come to my mind on the subject of &lt;em&gt;knowing more about&lt;/em&gt;:&lt;/p&gt;
&lt;h1&gt;How to get to know more about something&lt;/h1&gt;
&lt;p&gt;&lt;img alt="cartoon of data-information-knowledge-insight-wisdom" src="http://peetronics.com/images/knowledge.jpg" width="80%"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Every day is a school day&lt;/em&gt;, you learn every day. Be it implicitly or explicitly. I don't want to go into details on implicit learning, part from saying that it is important to acknowledge that aspect (&lt;a href="http://peetronics.com/WhatIHaveLearnedToday-000.html"&gt;I've written about that in the past&lt;/a&gt;).&lt;br&gt;
As soon as you think or say "&lt;em&gt;I wish I knew more about ...&lt;/em&gt;", you state a desire you explicitly want to learn about a topic. And then it is up to you to find a way to gather that knowledge.  &lt;/p&gt;
&lt;p&gt;There are so many ways to learn and gather knowledge:  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reading&lt;/strong&gt;: books, essays, blogs, articles, manuals, technical guides&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Watching&lt;/strong&gt;: tutorials, demonstrations, conference talks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Schooling&lt;/strong&gt;: classes, courses, studies, certification, workshops&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mentoring&lt;/strong&gt;: coaching, training, consulting, counseling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Practicing&lt;/strong&gt;: challenges, exercises, dojos, hackathons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With so many different options, it is important that you find the best approach for type of knowledge gathering you want to do. Some are better suited for certain purposes than others.  Wanting to know more about philosophy probably requires a more extensive study than learning how to make kimchi.&lt;/p&gt;
&lt;p&gt;And also find a way of learning what your comfortable with. For me personally, reading is not the easiest way. I rather learn by watching and having hands-on experience.&lt;/p&gt;
&lt;h1&gt;Acknowledgement of your limited knowledge&lt;/h1&gt;
&lt;p&gt;No matter how much you know about a certain topic, there probably - no, certainly - will be people out there that know as much or even more on that same topic. Several things to be said on this:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It stimulates collaboration. Know what you know, know what you don't know, know what others know, know what others don't know. Complement each other's knowledge.&lt;/li&gt;
&lt;li&gt;It allows your to keep learning. be it directly from the others you work with, be it from the vast majority of resources that are available.&lt;/li&gt;
&lt;li&gt;It shows modesty. Which is not a bad thing ...&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In other words, don't get complacent, be open to more learning.&lt;/p&gt;
&lt;h1&gt;Being fine with not knowing everything&lt;/h1&gt;
&lt;p&gt;For sure, it can be frustrating not knowing enough about a certain topic. It can make you feel insecure (&lt;em&gt;am I good enough for this job?&lt;/em&gt;), you might see yourself as an imposter, you feel unconfident amongst colleagues and peers, and, it is just annoying not knowing the answer to the winning question in a pub quiz....  &lt;/p&gt;
&lt;p&gt;Keep in mind however, that you &lt;strong&gt;can't&lt;/strong&gt; know everything and you don't &lt;strong&gt;have&lt;/strong&gt; to know everything. Be selective on the things you want to know more about. Pick out the things that can bring you further (in any way), delve into subjects that bring you joy. And for the rest, of the things you don't know, there are people &lt;strong&gt;with&lt;/strong&gt; the knowledge you can ask and collaborate with...&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Impetus for this article&lt;/h3&gt;
&lt;p&gt;I haven't written a blog post in a while, &lt;a href="http://peetronics.com/WhatIHaveLearnedToday-retrospective.html"&gt;though I made myself a promise to write more&lt;/a&gt;. But hey, that's how things go (don't beat yourself up on that Peet!).  &lt;/p&gt;
&lt;p&gt;Recently there have been a few triggers that made me decide to write this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://club.ministryoftesting.com/c/bloggers-club"&gt;The &lt;strong&gt;Ministry of Testing&lt;/strong&gt; has reignited their &lt;strong&gt;bloggers club&lt;/strong&gt;&lt;/a&gt;. I have let a few iterations slip, but ...&lt;/li&gt;
&lt;li&gt;... &lt;a href="https://club.ministryoftesting.com/t/bloggers-club-august-september-2020-i-wish-i-knew-more-about"&gt;This month's topic&lt;/a&gt; is close to my heart and think I can write a meaningful article about it&lt;/li&gt;
&lt;li&gt;Two weeks ago, I joined in on an &lt;a href="https://club.ministryoftesting.com/t/ama-how-to-start-blogging-ama-with-louise-gibbs-bruce-chris-armstrong-lee-marshall"&gt;Ask Me Anything session on blogging&lt;/a&gt;, facilitated by the Ministry of Testing, hosted by &lt;a href="https://twitter.com/BruceOnlyBruce"&gt;@BruceOnlyBruce&lt;/a&gt;, &lt;a href="https://twitter.com/christovskia"&gt;@christovskia&lt;/a&gt;, &lt;a href="https://twitter.com/Louise_J_Gibbs"&gt;@Louise_J_Gibbs&lt;/a&gt; and &lt;a href="https://twitter.com/ThePirateTester"&gt;@ThePirateTester&lt;/a&gt;. Lots of wisdom and tips in there and enough reasons on why you should write more.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And with all of that, I hadn't any excuse anymore NOT to write a blog post. What you've been reading is the result. Hope you found it useful. Feel free to &lt;a href="https://twitter.com/PeetRonics"&gt;get in touch with me&lt;/a&gt; if you want to comment or discuss.&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Ministry Of Testing"></category><category term="Blogging"></category><category term="Testing"></category></entry><entry><title>What I Have Learned Today - #019</title><link href="http://peetronics.com/WhatIHaveLearnedToday-019.html" rel="alternate"></link><published>2019-11-23T21:00:00+00:00</published><updated>2019-11-23T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-23:/WhatIHaveLearnedToday-019.html</id><summary type="html">&lt;p&gt;The importance of code reviews&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="github code review example" src="http://peetronics.com/images/code-review.png" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;The importance of code reviews&lt;/h1&gt;
&lt;p&gt;Code reviews are one of many important mechanisms (or rituals if you like) to ensure &lt;em&gt;quality&lt;/em&gt; of your software project/product. Potential bugs can be caught early as well as negative performance / security implications.  &lt;/p&gt;
&lt;p&gt;What I find though, what is not mentioned enough, is that code reviews are also a great vehicle for knowledge transfer. By participating as a reviewer you can &lt;strong&gt;learn&lt;/strong&gt; a lot.  &lt;/p&gt;
&lt;p&gt;That’s why I make an effort to get involved in code reviews as much as possible.  &lt;/p&gt;
&lt;h1&gt;Respectful Reviews&lt;/h1&gt;
&lt;p&gt;While enjoying my morning cup of coffee and reading through blog posts, I came across this &lt;a href="https://testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html"&gt;article&lt;/a&gt; from the &lt;a href="https://testing.googleblog.com/"&gt;Google Testing Blog&lt;/a&gt;. It is list of &lt;em&gt;do’s&lt;/em&gt; and &lt;em&gt;don’ts&lt;/em&gt; for code reviews, aimed both at authors and reviewers. A quick read and very helpful tips to make reviews better.  &lt;/p&gt;
&lt;p&gt;As an added bonus the article can be printed on one &lt;a href="https://docs.google.com/document/d/1_Gljf1TMTV2WPsiXCdk8oIkiq6uiajN_IqGdlD7u3Mc/edit"&gt;A-4&lt;/a&gt;, which you can hang on the toilet of your office. Probably something I will do when I’m back in the office 😄.  &lt;/p&gt;
&lt;h1&gt;Going down the rabbit hole&lt;/h1&gt;
&lt;p&gt;The last bullet-point of that article refers to a page on how to deal with &lt;a href="https://google.github.io/eng-practices/review/reviewer/standard.html#conflicts"&gt;conflicts&lt;/a&gt; during code reviews. Which is part of a wider set of &lt;a href="https://google.github.io/eng-practices/"&gt;guidelines&lt;/a&gt; around code reviews that Google produced. More reading, more &lt;strong&gt;learning&lt;/strong&gt; and something to share with the team.  &lt;/p&gt;
&lt;p&gt;Have a great weekend!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Software Development"></category><category term="Testing"></category><category term="What I Have Learned Today"></category></entry><entry><title>What I Have Learned Today - #013</title><link href="http://peetronics.com/WhatIHaveLearnedToday-013.html" rel="alternate"></link><published>2019-11-17T21:00:00+00:00</published><updated>2019-11-17T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-17:/WhatIHaveLearnedToday-013.html</id><summary type="html">&lt;p&gt;Honing your skills by play&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Image of the card game Set" src="http://peetronics.com/images/set.jpg" width="80%"&gt;  &lt;/p&gt;
&lt;h1&gt;Play&lt;/h1&gt;
&lt;p&gt;It is well known that playing board- and card-games has got numerous benefits. Plenty of &lt;a href="https://www.dumblittleman.com/benefits-of-playing-board-games/"&gt;articles&lt;/a&gt; have been written about it so I will refrain from re-iterating. Part from all the mentioned benefits, for me probably the biggest one is that it is fun 😄. So it’s no secret I’m always up for a game of any sort.  &lt;/p&gt;
&lt;h1&gt;Set&lt;/h1&gt;
&lt;p&gt;A card game I particularly like is &lt;a href="https://en.wikipedia.org/wiki/Set_(card_game)"&gt;Set&lt;/a&gt;. Simple in concept, yet very gripping. Simplest explanation is to find three cards that are completely similar or opposite in shape, filling, colour or number (follow the link for full rules).The player that sees the similarities / opposites first gets the cards. Most cards wins.I believe that particularly this is a game that sits close to my profession as software tester, in which looking for patterns, similarities, opposites is a key part of your job.  &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;So yes, even on a lazy Sunday while playing games, I’m learning to hone my professional skills…Have fun!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category><category term="Testing"></category><category term="Skills"></category></entry><entry><title>What I Have Learned Today - #011</title><link href="http://peetronics.com/WhatIHaveLearnedToday-011.html" rel="alternate"></link><published>2019-11-15T21:00:00+00:00</published><updated>2019-11-15T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-15:/WhatIHaveLearnedToday-011.html</id><summary type="html">&lt;p&gt;Test before push&lt;/p&gt;</summary><content type="html">&lt;p&gt;A quick one today&lt;br&gt;
I did a code refactor &lt;a href="http://peetronics.com/WhatIHaveLearnedToday-008.html"&gt;3 days ago&lt;/a&gt;. Today I &lt;strong&gt;learnt&lt;/strong&gt; the importance of testing before pushing your code changes.  &lt;/p&gt;
&lt;p&gt;Because of the refactoring, a portion of the nightly regression tests misbehaved. And I only realised today 😦. Of course I did test the few scenarios before committing the changes; yet… I didn’t cater for all possible paths. Luckily a fix was readily available.  &lt;/p&gt;
&lt;p&gt;So next time I do a refactor, I need to remember to test, test, and… TEST!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="What I Have Learned Today"></category><category term="Testing"></category></entry><entry><title>What I Have Learned Today - #004</title><link href="http://peetronics.com/WhatIHaveLearnedToday-004.html" rel="alternate"></link><published>2019-11-08T21:00:00+00:00</published><updated>2019-11-08T21:00:00+00:00</updated><author><name>Peet Michielsen</name></author><id>tag:peetronics.com,2019-11-08:/WhatIHaveLearnedToday-004.html</id><summary type="html">&lt;p&gt;Putting pairwise testing into practice&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="number_of_permutations = 3 * 6 * 8 * 2 * 13 * 2 * 2 * 2 - print(number_of_permutations) - 29952" src="http://peetronics.com/images/permutations.png" width="80%"&gt;&lt;/p&gt;
&lt;h1&gt;Pairwise Testing&lt;/h1&gt;
&lt;p&gt;I have learned about &lt;a href="https://www.softwaretestinghelp.com/what-is-pairwise-testing/"&gt;pairwise testing&lt;/a&gt; (or sometimes called all-pairs testing) in the past as being a good test specification technique to come up with a meaningful and manageable set of test cases. Until now I have experimented with it but never used it in anger.    &lt;/p&gt;
&lt;h1&gt;All-pairs in practice&lt;/h1&gt;
&lt;p&gt;At the moment I am working on a test for a complex feature of the system pictured below:  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Optos Silverstone; ultra-widefield retinal imaging device with integrated, UWF-guided swept source OCT." src="http://peetronics.com/images/indy-right.png"&gt;&lt;/p&gt;
&lt;p&gt;In a workshop session this morning I gathered subject matter experts, and defined a set of parameters relevant for the feature under test. And there are a lot of them, with each a number of possible values.  &lt;/p&gt;
&lt;p&gt;Getting a full coverage with all possible permutations would have resulted in &lt;strong&gt;29952 test cases&lt;/strong&gt;. For reference, with the way the system works (keep complex in mind) it takes 1/2 an hour to fully run and analyse 1 test case. This would take almost 2 years(!) back-to-back testing to get through.  &lt;/p&gt;
&lt;p&gt;With using the test specification technique of pairwise testing, I managed to reduce the set of test cases to 62. That is a big reduction but it doesn’t compromise on coverage. With execution these tests (still 31 hours but it only will be run over the weekend) there is confidence this feature will be adequately covered.  &lt;/p&gt;
&lt;h1&gt;Tools&lt;/h1&gt;
&lt;p&gt;To make life easier applying pairwise testing it is highly recommended to use a tool. There are various ones out there; a list of them are mentioned in this &lt;a href="https://www.softwaretestinghelp.com/what-is-pairwise-testing/"&gt;article&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;The one tool I particularly like is the Pairwise Independent Combinatorial Tool &lt;a href="https://github.com/microsoft/pict"&gt;(PICT)&lt;/a&gt; from Microsoft. (turns out they do make useful products 😉). The mean reason I like is, that it is one executable which completely runs from the command line. It has got a lot of flexibility and executes quick.  &lt;/p&gt;
&lt;p&gt;A command line tool might not be your cup of tea; have a look at the other tools 😃.  &lt;/p&gt;
&lt;p&gt;Happy pairwising!  &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This post is part of a series of articles about “What I Have Learned Today”; acknowledging every day the thing I have learned. Feel free to read the other posts. all opinions in this article are my own and not necessarily represent the views of my employer.&lt;/em&gt;&lt;/p&gt;&lt;script src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;</content><category term="Blog"></category><category term="Testing"></category><category term="What I Have Learned Today"></category></entry></feed>